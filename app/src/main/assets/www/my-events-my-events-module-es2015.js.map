{"version":3,"sources":["./src/app/my-events/my-events.page.html","./src/app/app.service.ts","./src/app/my-events/my-events.module.ts","./src/app/my-events/my-events.page.scss","./src/app/my-events/my-events.page.ts"],"names":[],"mappings":"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","file":"my-events-my-events-module-es2015.js","sourcesContent":["module.exports = \"<!--mobile header-->\\n<ion-header class=\\\"mobile-header customMobileHeader \\\" no-border>\\n    <ion-toolbar class=\\\"header--toolbar\\\">\\n        <ion-buttons (click)=\\\"gotobackPage()\\\" class=\\\"cursor-pointer\\\" slot=\\\"start\\\">\\n            <ion-icon name=\\\"arrow-back\\\"></ion-icon>&nbsp;{{'MY_STUFF.my_events' | translate}}\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<!--end mobile header-->\\n<ion-content>\\n    <div class=\\\"banner\\\" style=\\\"background-image: url('../../assets/img/banner-bg.jpg');\\\">\\n        <div class=\\\"banner__layer\\\"></div>\\n        <div class=\\\"banner__content\\\">\\n            <div class=\\\"app-container ion-text-center\\\">\\n                <h1 class=\\\"ion-no-margin heading1 banner__heading\\\">{{'MY_STUFF.my_events' | translate}}</h1>\\n                <p class=\\\"ion-no-margin banner__text\\\">{{'MY_STUFF.see_what_message' | translate}}.</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"page-wrapper ion-justify-content-start\\\">\\n        <div class=\\\"app-container\\\">\\n            <div class=\\\"event-list-wrap\\\">\\n                <ion-card class=\\\"ionCard ion-text-center ion-margin-bottom ionCard--mobile\\\"\\n                          style=\\\"border-radius: 5px;\\\" *ngIf=\\\"eventsdata\\\">\\n                    <h4 class=\\\"heading4\\\">{{'MY_STUFF.no_event_available' | translate}}</h4>\\n                </ion-card>\\n            </div>\\n            <div class=\\\"event-list-wrap\\\">\\n                <ion-card (click)=\\\"gotoDetail(i)\\\" class=\\\"ionCard ion-margin-bottom ionCard--mobile cursor-pointer\\\"\\n                          style=\\\"border-radius: 5px;\\\" *ngFor=\\\"let item of data; let i = index\\\">\\n                    <ion-item class=\\\"ionMedia ionMedia--big\\\" lines=\\\"none\\\">\\n                        <div class=\\\"ionMedia__media ionMedia__media--dark ionMedia__media--big\\\">\\n                            <span style=\\\"display:block;font-size: 25px;line-height: 20px;\\\">{{item.start_date.dd}}</span>\\n                            <span class=\\\"font-weight-normal\\\">{{item.start_date.mm}}</span>\\n                        </div>\\n                        <ion-label class=\\\"ion-text-wrap\\\">\\n                            <h2 class=\\\"ionMedia__heading\\\">{{item.checkin_name}}</h2>\\n                            <p class=\\\"ionMedia__text text-gray\\\">{{item.church_name}}</p>\\n                            <p class=\\\"ionMedia__text text-gray\\\">{{appService.getDateTimeFormat(item.end_date)}}</p>\\n                        </ion-label>\\n                    </ion-item>\\n                </ion-card>\\n            </div>\\n        </div>\\n    </div>\\n<!--    <app-footer></app-footer>-->\\n</ion-content>\\n<!--<app-footer-mobile></app-footer-mobile>-->\\n\"","import { Injectable } from '@angular/core';\nimport * as moment from \"moment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  constructor() { }\n\n  // getDateTimeFormat(date) {\n  //   if (localStorage.getItem('isDateTimeFormat') == 'true') {\n  //     return moment(date).format('dddd, MM/DD/YY, hh:mm A');\n  //   } else {\n  //     return moment(date).format('MMMM DD, YYYY, hh:mm A');\n  //   }\n  // }\n\n  // getDateFormat(date) {\n  //   if (localStorage.getItem('isDateTimeFormat') == 'true') {\n  //     return moment(date).format('dddd, MM/DD/YY');\n  //   } else {\n  //     return moment(date).format('MMMM DD, YYYY');\n  //   }\n  // }\n\n  // getTimeFormat(date) {\n  //   if (localStorage.getItem('isDateTimeFormat') == 'true') {\n  //     return moment(date, 'HH:MM').format('hh:mm A');\n  //   } else {\n  //     return moment(date, 'HH:MM').format('hh:mm A');\n  //   }\n  // }\n\n  // getGroupsTimeFormat(date) {\n  //   let time = moment(date, 'hh:mm A');\n  //   if (localStorage.getItem('isDateTimeFormat') == 'true') {\n  //     return moment(time, 'HH:MM').format('hh:mm A');\n  //   } else {\n  //     return moment(time, 'HH:MM').format('hh:mm A');\n  //   }\n  // }\n\n\n\n\n\n\n  getGroupsTimeFormat(date) {\n    if (localStorage.getItem('timeFormat') == '12') {\n      return moment(date).format('hh:mm A');\n    } else {\n      return moment(date).format('HH:mm');\n    }\n\n\n\n    // let time = moment(date, 'hh:mm A');\n    // if (localStorage.getItem('isDateTimeFormat') == 'true') {\n    //   return moment(time, 'HH:MM').format('hh:mm A');\n    // } else {\n    //   return moment(time, 'HH:MM').format('hh:mm A');\n    // }\n  }\n\ngetTimeFormat(time){\n  if (localStorage.getItem('timeFormat') == '12') {\n    return moment(time).format('hh:mm A');\n  } else {\n    return moment(time).format('HH:mm');\n  }\n}\n\ngetDateFormat(date){\n   \n  let dateFormat = localStorage.getItem('dateFormat').split(' ')[0];\n  if(dateFormat.includes('dd')){\n    dateFormat = dateFormat.replace('dd', 'DD');\n  }\n  if(dateFormat.includes('yyyy')){\n    dateFormat = dateFormat.replace('yyyy', 'YYYY');\n  }\n  \n    return moment(date).format(dateFormat);\n\n}\n\ngetDateTimeFormat(dateAndTime){\n  let dateFormat = localStorage.getItem('dateFormat').split(' ')[0];\n  if(dateFormat.includes('dd')){\n\n    dateFormat = dateFormat.replace('dd', 'DD');\n  }\n  if(dateFormat.includes('yyyy')){\n    dateFormat = dateFormat.replace('yyyy', 'YYYY');\n  }\n  if (localStorage.getItem('timeFormat') == '12') {\n    return moment(dateAndTime).format(dateFormat + ' ' + 'hh:mm A' ) ;\n  } else {\n    return  moment(dateAndTime).format(dateFormat + ' ' + 'HH:mm');\n  }\n}\n\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {MyEventsPage} from './my-events.page';\nimport {SharedCommonModule} from \"../common/shared-common.module\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MyEventsPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        TranslateModule,\n        SharedCommonModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [MyEventsPage]\n})\nexport class MyEventsPageModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LWV2ZW50cy9teS1ldmVudHMucGFnZS5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {Storage} from \"@ionic/storage\";\nimport {ApiService} from \"../../services/api.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {LoaderService} from \"../../services/loader.service\";\nimport {Router} from \"@angular/router\";\nimport {Location} from \"@angular/common\";\nimport {ToastService} from \"../../services/toast.service\";\nimport * as moment from 'moment';\nimport {Platform} from \"@ionic/angular\";\nimport {Device} from \"@ionic-native/device/ngx\";\nimport {AnalyticsService} from \"../../services/analytics.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport { AppService } from '../app.service';\nimport {EventProviderService} from \"../../services/event-provider.service\";\n\n@Component({\n    selector: 'app-my-events',\n    templateUrl: './my-events.page.html',\n    styleUrls: ['./my-events.page.scss'],\n})\nexport class MyEventsPage implements OnInit {\n\n    loginData: any;\n    eventsdata: boolean = false;\n    data: any;\n    start_time_analytics: any;\n    page_name: any = \"My Events\";\n    custom_name: any = \"My Events\";\n    user: any;\n    theme: any;\n    alertMessage: any;\n    constructor(\n        private apiService: ApiService,\n        private storage: Storage,\n        private loader: LoaderService,\n        public appService: AppService,\n        private Auth: AuthService,\n        private router: Router,\n        private location: Location,\n        private toast: ToastService,\n        private analytics: AnalyticsService,\n        private platform: Platform,\n        private device: Device,\n        private translate: TranslateService,\n        private event_provider: EventProviderService,\n    ) {\n        // get translated alert message\n        let interval = setInterval(() => {\n            this.translate.get('ALERTS').subscribe( (res: any) => {\n                this.alertMessage = res;\n                clearInterval(interval);\n            });\n        }, 2000)\n    }\n\n    ngOnInit() {\n        // getting user data\n        this.getLoginData();\n\n        // getting theme from local storage\n        this.storage.get('theme').then(async res => {\n            this.theme = res;\n        });\n    }\n\n    async getLoginData() {\n        this.loginData = await this.Auth.getUser();\n        if (this.loginData) {\n            this.getEventData();\n        }\n    }\n\n    // getting event data\n    getEventData() {\n        this.loader.presentLoading().then(() => {\n            const body = {\n                auth: 'Bearer ' + this.loginData.auth.access_token,\n               id: this.loginData.user.id\n            };\n            // fetching events data\n            this.apiService.getEvents(JSON.stringify(body)).subscribe(async (res: any) => {\n                if (res.events[0].length === 0) {\n                    this.eventsdata = true;\n                } else {\n                    this.eventsdata = false;\n                    this.data = res.events[0];\n                    let test;\n                    let today;\n                    let dd;\n                    let mm;\n\n                    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n                    // formatting date\n                    let date = [];\n                    for (let x = 0; x < this.data.length; x++) {\n                        test = this.data[x].start_date;\n                        today = new Date(test);\n                        dd = today.getDate();\n                        mm = monthNames[today.getMonth()];\n                        date.push({dd, mm});\n                        this.data[x].start_date = date[x];\n                    }\n                }\n                this.loader.stopLoading();\n            }, (err: any) => {\n                let message = err.message;\n\n                this.toast.presentToastWithOptions((this.alertMessage ? this.alertMessage.error_occured_try_again : 'Error Occured, Try Again'), (this.alertMessage ? this.alertMessage.WarningMessage : 'Warning Message'), 'warning');\n                this.loader.stopLoading();\n            });\n        });\n    }\n\n    // navigating to event-detail page\n    gotoDetail(i){\n            this.router.navigate(['my-event-detail', {\n                event_id: this.data[i].id\n            }]);\n    }\n\n    // navigate to back page\n    gotobackPage(){\n        this.location.back();\n    }\n\n    setAnalytics() {\n        let dev_id = '';\n        let device = 'web';\n        // preparing device data\n        if(this.platform.is('android') || this.platform.is('iphone')) {\n            dev_id = this.device.uuid;\n            if (dev_id){\n                device =  this.platform.platforms()[0];\n            }\n        }\n\n        // preparing duration data\n        let end_time_analytics = moment();\n        var duration:any = moment.duration(end_time_analytics.diff(this.start_time_analytics)).asSeconds();\n\n        // preparing user data\n        let userId = this.loginData ? this.loginData.user.id : 'guest';\n\n        // preparing data for analytics\n        const body = JSON.stringify({\n            church_id: this.theme.ch_id,\n            latitude: this.theme.latitude ? this.theme.latitude : \"\",\n            longitude: this.theme.longitude ? this.theme.longitude : \"\",\n            timespent: duration,\n            module: this.page_name,\n            custom_name: this.custom_name,\n            ip_address: \"\",\n            device: device,\n            device_id: dev_id,\n            client_type: userId,\n            event_type: \"\"\n        });\n        // calling function from service to update Analytics Data\n        this.analytics.setAnalytics(body).subscribe((res: any) => {\n\n        })\n    }\n\n    ionViewDidLeave(){\n        this.setAnalytics();\n    }\n    ionViewDidEnter(){\n        // setting start time for analytics\n        this.start_time_analytics = moment();\n        this.event_provider.hidefooter(true, 'other');\n    }\n\n}\n"],"sourceRoot":""}