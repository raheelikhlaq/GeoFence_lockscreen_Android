{"version":3,"sources":["./src/app/new-testament/new-testament.page.html","./src/app/new-testament/new-testament.module.ts","./src/app/new-testament/new-testament.page.scss","./src/app/new-testament/new-testament.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,2RAA2R,8SAA8S,iBAAiB,ufAAuf,2aAA2a,aAAa,4WAA4W,uCAAuC,8BAA8B,yM;;;;;;;;;;;;;;;;;;;;;;;;ACAn5D;AACM;AACF;AACU;AAEV;AAEW;AACY;AACd;AAEpD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAgB;KAC9B;CACJ,CAAC;AAaF,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAClC;AADY,sBAAsB;IAXlC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,mEAAe;YACf,+EAAkB;YAClB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC;QACD,YAAY,EAAE,CAAC,oEAAgB,CAAC;KACnC,CAAC;GACW,sBAAsB,CAClC;AADkC;;;;;;;;;;;;AC7BnC,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AACU;AACA;AACe;AACb;AACrB;AACoC;AACtB;AAEO;AACU;AAOtE,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IA0BzB,YACY,aAA2B,EAC3B,MAAqB,EACrB,KAAmB,EACnB,MAAc,EACd,OAAgB,EAChB,cAAoC,EACpC,KAAqB,EACrB,SAA2B,EAC5B,MAAoB,EACpB,YAA+B;QAT9B,kBAAa,GAAb,aAAa,CAAc;QAC3B,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAS;QAChB,mBAAc,GAAd,cAAc,CAAsB;QACpC,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAkB;QAC5B,WAAM,GAAN,MAAM,CAAc;QACpB,iBAAY,GAAZ,YAAY,CAAmB;QAlC1C,oBAAe,GAAQ;YACnB,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,EAAE;YACb,UAAU,EAAE,EAAE;YACd,kBAAkB,EAAE,EAAE;YACtB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACf,CAAC;QAEF,qBAAgB,GAAQ,KAAK,CAAC;QAC9B,kCAAkC;QAClC,sBAAiB,GAAQ,EAAC,oBAAoB,EAAE,KAAK,EAAE,oBAAoB,EAAE,SAAS,EAAE,cAAc,EAAE,SAAS,EAAC,CAAC;QACnH,oBAAe,GAAO,EAAC,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,sBAAsB,EAAE,YAAY,EAAE,KAAK,EAAC,CAAC;QACnG,aAAQ,GAAQ,EAAE,CAAC;QAwBf,+BAA+B;QAC/B,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,CAAC,GAAQ,EAAE,EAAE;gBACjD,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;gBACxB,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,IAAI,CAAC;QAER,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAChD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC;YAC5B,gBAAgB;YACjB,+BAA+B;YAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAGK,QAAQ;;YACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;YACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;YAEpD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,0CAA0C,EAAC,GAAG,CAAC,CAAC;gBAC5D,IAAG,GAAG,CAAC,QAAQ,EAAE;oBAET,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;oBAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;oBAC/B,4DAA4D;oBAC5D,6DAA6D;oBAC3D,mCAAmC;oBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAEvC;qBAAI;oBACD,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,sBAAsB,EAAE,QAAQ,CAAC,CAAC;iBAC1F;YAEL,CAAC,CAAC;YAEF,IAAI,CAAC,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACvF,IAAI,CAAC,EAAE;gBACH,IAAI,CAAC,CAAC,QAAQ,EAAE;oBACZ,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,QAAQ,CAAC;iBACvC;gBACD,IAAI,CAAC,CAAC,MAAM,EAAE;oBACV,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC;iBACnC;aACJ;YACD,IAAI,SAAS,GAAG;gBACZ,QAAQ,EAAE,IAAI,CAAC,iBAAiB;gBAChC,MAAM,EAAE,IAAI,CAAC,eAAe;aAC/B,CAAC;YACF,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;YAGzD,8CAA8C;YAE9C,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;gBAC5D,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE;oBAClC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;iBACjC;YACL,CAAC,EAAC,CAAC;QAEP,CAAC;KAAA;IAED,eAAe;IACf,yEAAyE;IACzE,4EAA4E;IAC5E,wDAAwD;IACxD,2DAA2D;IAE3D,uDAAuD;IAGvD,oCAAoC;IACpC,6DAA6D;IAC7D,iCAAiC;IACjC,qCAAqC;IACrC,4EAA4E;IAC5E,0DAA0D;IAC1D,qDAAqD;IACrD,oBAAoB;IACpB,uBAAuB;IACvB,qCAAqC;IACrC,+CAA+C;IAC/C,0DAA0D;IAC1D,kDAAkD;IAClD,oBAAoB;IACpB,gBAAgB;IAChB,mBAAmB;IACnB,+BAA+B;IAC/B,qCAAqC;IACrC,gDAAgD;IAChD,+EAA+E;IAC/E,gFAAgF;IAChF,0DAA0D;IAC1D,kDAAkD;IAClD,oBAAoB;IACpB,uBAAuB;IACvB,qCAAqC;IACrC,+CAA+C;IAC/C,0DAA0D;IAC1D,kDAAkD;IAClD,oBAAoB;IACpB,gBAAgB;IAChB,YAAY;IAEZ,SAAS;IAET,8FAA8F;IAC9F,eAAe;IACf,4BAA4B;IAC5B,mDAAmD;IACnD,YAAY;IACZ,0BAA0B;IAC1B,+CAA+C;IAC/C,YAAY;IACZ,QAAQ;IACR,wBAAwB;IACxB,4CAA4C;IAC5C,uCAAuC;IACvC,SAAS;IACT,gEAAgE;IAEhE,qDAAqD;IAErD,wEAAwE;IACxE,kDAAkD;IAClD,6CAA6C;IAC7C,YAAY;IACZ,UAAU;IAEV,IAAI;IAEJ,gCAAgC;IAChC,mCAAmC;IACnC,WAAW,CAAC,IAAI,EAAE,IAAI;QAClB,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAS,CAAC;gBACxB,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE;oBAClB,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACtB;qBAAM;oBACH,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACrB;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;YAEH,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC;YAEpE,uCAAuC;YACvC,IAAI,IAAI,GAAqB;gBACzB,WAAW,EAAE;oBACT,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;oBAC7B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;oBAClC,MAAM,EAAE,IAAI,CAAC,QAAQ;oBACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,IAAI,EAAE,GAAG;iBACZ;aACJ,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG;gBACtB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAC7B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;gBAClC,MAAM,EAAE,IAAI,CAAC,QAAQ;gBACrB,QAAQ,EAAG,IAAI,CAAC,QAAQ;gBACxB,IAAI,EAAE,GAAG;aACZ;YACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,CAAC;SAClD;IACL,CAAC;IAED,UAAU,CAAC,IAAI;QACX,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;YACvD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE5B,uBAAuB;YACvB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpC,IAAI,SAAS,GAAQ,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,UAAS,CAAC;gBACnB,IAAG,CAAC,IAAI,EAAE,EAAE;oBACR,IAAI,OAAO,GAAG;wBACV,EAAE,EAAE,CAAC;wBACL,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBAEF,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC3B;YAEL,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;YAE1B,kBAAkB;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAS,CAAC;gBACrB,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;oBAC5B,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;iBACtB;qBAAM;oBACH,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACrB;gBACD,OAAO,CAAC,CAAC;YACb,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,4BAA4B;IAC5B,uBAAuB;IACvB,sCAAsC;IACtC,mFAAmF;IACnF,yBAAyB;IACzB,sCAAsC;IACtC,6CAA6C;IAC7C,0CAA0C;IAC1C,oCAAoC;IACpC,sBAAsB;IACtB,qCAAqC;IAErC,+CAA+C;IAC/C,oEAAoE;IACpE,4CAA4C;IAC5C,0FAA0F;IAC1F,kCAAkC;IAClC,2DAA2D;IAC3D,+CAA+C;IAC/C,kDAAkD;IAClD,0CAA0C;IAC1C,qCAAqC;IACrC,8CAA8C;IAC9C,6BAA6B;IAE7B,mDAAmD;IACnD,0BAA0B;IAC1B,iDAAiD;IAEjD,uDAAuD;IACvD,8DAA8D;IAC9D,kDAAkD;IAClD,mCAAmC;IACnC,iDAAiD;IACjD,4BAA4B;IAC5B,oCAAoC;IACpC,0BAA0B;IAG1B,yCAAyC;IACzC,oDAAoD;IACpD,mEAAmE;IACnE,kDAAkD;IAClD,mCAAmC;IACnC,iDAAiD;IACjD,4BAA4B;IAC5B,oCAAoC;IACpC,0BAA0B;IAC1B,oBAAoB;IACpB,gBAAgB;IAEhB,+CAA+C;IAC/C,+CAA+C;IAC/C,iCAAiC;IACjC,8JAA8J;IAC9J,gBAAgB;IAChB,cAAc;IACd,IAAI;IAEJ,WAAW,CAAC,WAAW;QACpB,2CAA2C;QAC1C,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,MAAM,GAAG,WAAW,CAAC;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;YACtE,IAAI,GAAG,EAAE;gBACL,IAAI,IAAI,GAAQ,EAAE,CAAC;gBACnB,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC;oBACnB,IAAI,OAAO,GAAG,EAAE,CAAC;oBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,kBAAkB,EAAG,CAAC,EAAE,EAAE;wBAC7C,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC;wBACf,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;qBAE1B;oBACP,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACnB,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC;oBACjB,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;oBACjB,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC;oBAC3B,CAAC,CAAC,QAAQ,GAAI,OAAO;wBACrB,CAAC,CAAC,SAAS,GAAG,SAAS;oBACvB,IAAG,CAAC,CAAC,SAAS,IAAI,GAAG,EAAE;wBACnB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAChB;gBACT,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,4BAA4B;gBAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAG,IAAI,CAAC,cAAc,CAAC;gBACtD,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE;oBAC5C,qBAAqB;oBACrB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC;oBACnE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;oBACjB,IAAI,IAAI,EAAE;wBACV,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpC,IAAI,SAAS,GAAQ,EAAE,CAAC;wBACxB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;4BACpB,IAAG,CAAC,IAAI,EAAE,EAAE;gCACR,IAAI,OAAO,GAAG;oCACV,EAAE,EAAE,CAAC;oCACL,QAAQ,EAAE,KAAK;iCAClB,CAAC;gCACF,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAE3B;wBACL,CAAC,CAAC,CAAC;wBACH,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;wBAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;4BACzB,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,cAAc,EAAE;gCAC9B,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;6BACtB;iCAAM;gCACH,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;6BACrB;4BACD,OAAO,CAAC,CAAC;wBACb,CAAC,CAAC,CAAC;wBAGH,kBAAkB;wBAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;4BACtB,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,cAAc,EAAE;gCACnC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;6BACtB;iCAAM;gCACH,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;6BACrB;4BACD,OAAO,CAAC,CAAC;wBACb,CAAC,CAAC,CAAC;qBACN;iBACJ;gBAEG,4BAA4B;gBAC5B,IAAI,CAAC,eAAe,CAAE,MAAM,CAAE,CAAC;aAClC;iBAAM,IAAI,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,CAAC,CAAC;aAC9I;QACL,CAAC,EAAC,CAAC;IACX,CAAC;IAED,eAAe;IAEf,eAAe,CAAE,UAAU;QACvB,IAAI,MAAM,GAAG,UAAU,CAAC;QACxB,4CAA4C;QACxC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAO,GAAQ,EAAE,EAAE,CAAC;YAC1E,IAAI,GAAG,EAAE;gBACL,IAAI,YAAY,GAAQ,EAAE,CAAC;gBAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,CAAC;oBACzB,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC;oBACtD,IAAI,QAAQ,EAAE;wBACV,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC;qBACnC;oBACD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;aAC7B;iBAAM,IAAI,CAAC,GAAG,EAAE;gBACb,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC,sBAAsB,CAAC,EAAE,QAAQ,CAAC,CAAC;aAC9I;YACD,6BAA6B;QACjC,CAAC,EAAC,CAAC;QACP,MAAM;IACV,CAAC;IAID,+BAA+B;IAC/B,uCAAuC;IACvC,mDAAmD;IACnD,uFAAuF;IACvF,yBAAyB;IACzB,8CAA8C;IAC9C,mDAAmD;IACnD,6EAA6E;IAC7E,sCAAsC;IACtC,2DAA2D;IAC3D,wBAAwB;IACxB,4CAA4C;IAC5C,sBAAsB;IACtB,6CAA6C;IAC7C,iCAAiC;IACjC,8JAA8J;IAC9J,gBAAgB;IAChB,4CAA4C;IAC5C,cAAc;IACd,aAAa;IACb,IAAI;IACJ,gBAAgB;QACZ,gDAAgD;QAChD,+CAA+C;QAC/C,2CAA2C;QAC3C,UAAU;QACV,uCAAuC;QACvC,6CAA6C;QAC7C,2BAA2B;IAG/B,CAAC;IAED,eAAe;QACX,+CAA+C;IACnD,CAAC;CACJ;;YA/Z8B,oEAAY;YACnB,sEAAa;YACd,oEAAY;YACX,sDAAM;YACL,sDAAO;YACA,qFAAoB;YAC7B,8DAAc;YACV,oEAAgB;YACrB,yEAAa;YACP,oFAAkB;;AApCjC,gBAAgB;IAL5B,+DAAS,CAAC;QACP,QAAQ,EAAE,mBAAmB;QAC7B,+JAAwC;;KAE3C,CAAC;2EA4B6B,oEAAY;QACnB,sEAAa;QACd,oEAAY;QACX,sDAAM;QACL,sDAAO;QACA,qFAAoB;QAC7B,8DAAc;QACV,oEAAgB;QACrB,yEAAa;QACP,oFAAkB;GApCjC,gBAAgB,CA0b5B;AA1b4B","file":"new-testament-new-testament-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\n  <div class=\\\"page-wrapper\\\">\\n    <div class=\\\"app-container\\\">\\n      <ion-card *ngIf=\\\"books && books.length > 0\\\" class=\\\"ionCard ionCard--mobile\\\">\\n        <ion-card-content class=\\\"ion-no-padding\\\">\\n          <div *ngFor=\\\"let item of books;index as i\\\" (click)=\\\"expandItem(item)\\\">\\n            <div class=\\\"accordionHeader\\\" [class.collapsed]=\\\"item.expanded\\\">\\n              <ion-row class=\\\"ion-align-items-center\\\">\\n                <ion-col size=\\\"10\\\">\\n                  <ion-card-title class=\\\"heading4 accordionHeader__heading\\\">{{item?.book_name}}</ion-card-title>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\" class=\\\"ion-text-right\\\">\\n                  <ion-icon name=\\\"arrow-dropright\\\" class=\\\"accordionHeader__icon accordionHeader__icon--right\\\"></ion-icon>\\n                  <ion-icon name=\\\"arrow-dropdown\\\" class=\\\"accordionHeader__icon accordionHeader__icon--down\\\"></ion-icon>\\n                </ion-col>\\n              </ion-row>\\n            </div>\\n            <div class=\\\"accordionBody\\\" style=\\\"padding-bottom: 0;\\\">\\n              <app-expandable [expanded]=\\\"item.expanded\\\">\\n                <div routerLink=\\\"/bible-chapter\\\" routerDirection=\\\"root\\\">\\n                  <ul class=\\\"list-inline bibleVerses\\\" *ngIf=\\\"chapters\\\">\\n                    <li class=\\\"list-inline-item bibleVerses__count\\\" *ngFor=\\\"let chapter of chapters\\\" (click)=\\\"selectVerse(chapter, item)\\\" [class.active]=\\\"chapter.selected\\\">\\n                      {{chapter?.id}}\\n                    </li>\\n                  </ul>\\n                </div>\\n              </app-expandable>\\n            </div>\\n          </div>\\n        </ion-card-content>\\n      </ion-card>\\n      <ion-card *ngIf=\\\" books && books.length === 0\\\" class=\\\"ionCard ion-text-center ion-margin-bottom ionCard--mobile\\\"\\n                style=\\\"border-radius: 5px;\\\" >\\n        <h4 class=\\\"heading4\\\">{{'BIBLE.no_bible' | translate}}</h4>\\n      </ion-card>\\n    </div>\\n  </div>\\n<!--  <app-footer *ngIf=\\\"ch_id != '1000'\\\"></app-footer>-->\\n</ion-content>\\n<!--<app-footer-mobile *ngIf=\\\"ch_id != '1000'\\\"></app-footer-mobile>-->\\n\"","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {NewTestamentPage} from './new-testament.page';\nimport {SharedCommonModule} from \"../common/shared-common.module\";\nimport {TranslateModule} from \"@ngx-translate/core\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: NewTestamentPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        TranslateModule,\n        SharedCommonModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [NewTestamentPage]\n})\nexport class NewTestamentPageModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25ldy10ZXN0YW1lbnQvbmV3LXRlc3RhbWVudC5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ToastService} from '../../services/toast.service';\nimport {BibleService} from '../../services/bible.service';\nimport {ActivatedRoute, NavigationExtras, Router} from '@angular/router';\nimport {LoaderService} from '../../services/loader.service';\nimport {Storage} from '@ionic/storage';\nimport {EventProviderService} from \"../../services/event-provider.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport { Platform } from '@ionic/angular';\nimport { CommonService } from 'src/services/common.service';\nimport { AudioplayerService } from 'src/services/audioplayer.service';\n\n@Component({\n    selector: 'app-new-testament',\n    templateUrl: './new-testament.page.html',\n    styleUrls: ['./new-testament.page.scss'],\n})\nexport class NewTestamentPage implements OnInit {\n    books: any [];\n    selectedChapter: any = {\n        dam_id: '',\n        book_id: '',\n        book_name: '',\n        book_order: '',\n        number_of_chapters: '',\n        chapters: '',\n        expanded: ''\n    };\n\n    selected_version: any = 'WEB';\n    // selected_language: any = 'EN1';\n    selected_language: any = {language_family_code: 'ENG', language_family_name: 'English', selection_type: 'default'};\n    selected_volume: any ={dam_id: 'EN1WEB', volume_name: 'WEB - Winfred Henson', version_code: 'WEB'};\n    chapters: any = [];\n    bible_id: any;\n    // selected_volume: any = 'EN1WEB';\n    params_book_id: any;\n    params_chap_id: any;\n    alertMessage: any;\n    ch_id: any;\n    langCode : any;\n    audio_id: any;\n    \n    constructor(\n        private _bibleService: BibleService,\n        private loader: LoaderService,\n        private toast: ToastService,\n        private router: Router,\n        private storage: Storage,\n        private event_provider: EventProviderService,\n        private route: ActivatedRoute,\n        private translate: TranslateService,\n        public common:CommonService,\n        public audioService:AudioplayerService,\n       \n\n    ) {\n        // get translated alert message\n        let interval = setInterval(() => {\n            this.translate.get('ALERTS').subscribe( (res: any) => {\n                this.alertMessage = res;\n                clearInterval(interval);\n            });\n        }, 2000)\n\n        this.event_provider.updateNewTest.subscribe(value => {              // listening event\n            this.bible_id = value.value;\n            // getting books\n           // this.getBooks( this.dam_id);\n           this.getCMPBooks(this.bible_id);\n        });\n    }\n\n\n    async ngOnInit() {\n        this.params_book_id = this.route.snapshot.paramMap.get('book_id');\n        this.params_chap_id = this.route.snapshot.paramMap.get('chapter_id');\n        this.params_book_id = this._bibleService.book_id;\n        this.params_chap_id = this._bibleService.chapter_id;\n\n        this.storage.get('app_language').then((res) => {\n            this.langCode = res.code;\n            console.log('response from local storge on ngoninit: ',res);\n            if(res.bible_id) {\n               \n                    this.audio_id = res.audio_id;\n                    this.bible_id = res.bible_id;\n                  //  var lastWord = this.dam_id.charAt(this.dam_id.length-1);\n                  //  lastWord != 'N' ? this.dam_id =  this.dam_id + 'N' : ''; \n                    // getting books of selected volume\n                    this.getCMPBooks(this.bible_id);\n              \n            }else{\n                this.toast.presentToastWithOptions('No Bible exist', 'Something Went Wrong', 'danger');\n            }\n            \n        })\n\n        let b = localStorage.getItem('bible') ? JSON.parse(localStorage.getItem('bible')) : '';\n        if (b) {\n            if (b.language) {\n                this.selected_language = b.language;\n            }\n            if (b.volume) {\n                this.selected_volume = b.volume;\n            }\n        }\n        let bible_obj = {\n            language: this.selected_language,\n            volume: this.selected_volume\n        };\n        localStorage.setItem(\"bible\", JSON.stringify(bible_obj));\n\n       \n        // getting lang and version from local storage\n\n        this.event_provider.getChurchData.subscribe(async (res: any) => {\n            if (!(Object.keys(res).length === 0)) {\n                this.ch_id = res.church.ch_id;\n            }\n        });\n\n    }\n\n    // ngOnInit() {\n    //     this.params_book_id = this.route.snapshot.paramMap.get('book_id');\n    //     this.params_chap_id = this.route.snapshot.paramMap.get('chapter_id');\n    //     this.params_book_id = this._bibleService.book_id;\n    //     this.params_chap_id = this._bibleService.chapter_id;\n\n    //     this.storage.get('app_language').then((res) => {\n\n            \n    //         this.langCode = res.code;\n    //         if(localStorage.getItem('app_language') == 'ml') {\n    //             if(res.bible_id) {\n    //                 if (!this.books) {\n    //                     this.dam_id = 'ba912c69-de7e-45a3-92bc-d33c47f6fa56';\n    //                     // getting books of selected volume\n    //                     this.getCMPBooks(this.dam_id);\n    //                 }\n    //             } else {\n    //                 if (!this.books) {\n    //                     this.dam_id = 'ENGESHN';\n    //                     // getting books of selected volume\n    //                     this.getBooks(this.dam_id);\n    //                 }\n    //             }\n    //         } else {\n    //             if(res.dam_id) {\n    //                 if (!this.books) {\n    //                     this.dam_id = res.dam_id;\n    //                     var lastWord = this.dam_id.charAt(this.dam_id.length-1);\n    //                     lastWord != 'N' ? this.dam_id =  this.dam_id + 'N' : ''; \n    //                     // getting books of selected volume\n    //                     this.getBooks(this.dam_id);\n    //                 }\n    //             } else {\n    //                 if (!this.books) {\n    //                     this.dam_id = 'ENGESHN';\n    //                     // getting books of selected volume\n    //                     this.getBooks(this.dam_id);\n    //                 }\n    //             }\n    //         }\n            \n    //     })\n\n    //     let b = localStorage.getItem('bible') ? JSON.parse(localStorage.getItem('bible')) : '';\n    //     if (b) {\n    //         if (b.language) {\n    //             this.selected_language = b.language;\n    //         }\n    //         if (b.volume) {\n    //             this.selected_volume = b.volume;\n    //         }\n    //     }\n    //     let bible_obj = {\n    //         language: this.selected_language,\n    //         volume: this.selected_volume\n    //     };\n    //     localStorage.setItem(\"bible\", JSON.stringify(bible_obj));\n\n    //     // getting lang and version from local storage\n\n    //     this.event_provider.getChurchData.subscribe(async (res: any) => {\n    //         if (!(Object.keys(res).length === 0)) {\n    //             this.ch_id = res.church.ch_id;\n    //         }\n    //     });\n\n    // }\n\n    // called when verse is selected\n    // set data and navigate to chapter\n    selectVerse(item, book) {\n        if (item) {\n            this.chapters.map(function(x) {\n                if (x.id !== item.id) {\n                    x.selected = false;\n                } else {\n                    x.selected = true;\n                }\n                return x;\n            });\n\n            let selectedBook = this.books.find(s => s.book_id === book.book_id);\n\n            // setting data to take to chapter page\n            let data: NavigationExtras = {\n                queryParams: {\n                    chapter: JSON.stringify(item),\n                    book: JSON.stringify(selectedBook),\n                    dam_id: this.bible_id,\n                    audio_id: this.audio_id,\n                    page: 'N'\n                }\n            };\n            this._bibleService.page = {\n                chapter: JSON.stringify(item),\n                book: JSON.stringify(selectedBook),\n                dam_id: this.bible_id,\n                audio_id : this.audio_id,\n                page: 'N'\n            }\n            this.router.navigate(['/bible-chapter'], data);\n        }\n    }\n\n    expandItem(item): void {\n        if (item && item.book_id !== this.selectedChapter.book_id) {\n            this.selectedChapter = item;\n\n            // Getting the chapters\n            let data = item.chapters.split(',');\n            let finalData: any = [];\n            data.forEach(function(e) {\n                if(e != '') {\n                    let chapter = {\n                        id: e,\n                        selected: false\n                    };\n    \n                    finalData.push(chapter);\n                }\n                \n            });\n            this.chapters = finalData;\n\n            //Expanding Toggle\n            this.books.map(function(x) {\n                if (x.book_id !== item.book_id) {\n                    x.expanded = false;\n                } else {\n                    x.expanded = true;\n                }\n                return x;\n            });\n        }\n    }\n\n    // getBooks( curr_dam_id ) {\n    //     let self = this;\n    //     let dam_id = curr_dam_id + 'N';\n    //         this._bibleService.getbibleBooks(dam_id).subscribe(async (res: any) => {\n    //             if (res) {\n    //                 let data: any = [];\n    //                 res.forEach(function (x) {\n    //                     x.expanded = false;\n    //                     data.push(x);\n    //                 });\n    //                 this.books = data;\n\n    //                 // setting if data in params\n    //                 if (this.params_book_id && this.params_chap_id) {\n    //                     //Geting the chapters\n    //                     let item = this.books.find(x => x.book_id === this.params_book_id);\n    //                     if (item) {\n    //                     let data = item.chapters.split(',');\n    //                     let finalData: any = [];\n    //                     data.forEach(function (e) {\n    //                         let chapter = {\n    //                             id: e,\n    //                             selected: false\n    //                         };\n\n    //                         finalData.push(chapter);\n    //                     });\n    //                     this.chapters = finalData;\n\n    //                     this.chapters.map(function (x) {\n    //                         if (x.id !== self.params_chap_id) {\n    //                             x.selected = false;\n    //                         } else {\n    //                             x.selected = true;\n    //                         }\n    //                         return x;\n    //                     });\n\n\n    //                     //Expanding Toggle\n    //                     this.books.map(function (x) {\n    //                         if (x.book_id !== self.params_book_id) {\n    //                             x.expanded = false;\n    //                         } else {\n    //                             x.expanded = true;\n    //                         }\n    //                         return x;\n    //                     });\n    //                 }\n    //             }\n\n    //                 //get & Map Text Book DAM ID\n    //                 this.getBooksText( dam_id );\n    //             } else if (!res) {\n    //                 this.toast.presentToastWithOptions(res.message, (this.alertMessage ? this.alertMessage.SomeThingWrong : 'Something Went Wrong'), 'danger');\n    //             }\n    //         });\n    // }\n\n    getCMPBooks(curr_dam_id) {\n       // console.log(curr_dam_id , this.langCode)\n        let self = this;\n        let dam_id = curr_dam_id;\n        let lang_code = this.langCode;\n            this._bibleService.getCMPbibleBooks(dam_id).subscribe(async (res: any) => {\n                if (res) {\n                    let data: any = [];\n                    res.forEach(function (x) {\n                        let chapter = '';\n                            for (let i = 1; i <= x.number_of_chapters ; i++) {\n                                chapter += i + \",\";\n                                    chapter.slice(0, -1);\n                                    \n                              }\n                        x.expanded = false;\n                        x.book_name = x.name;\n                            x.book_id = x.id;\n                            x.book_order = x.bookOrder;\n                            x.chapters =  chapter,\n                            x.lang_code = lang_code\n                            if(x.testament == 'N') {\n                                data.push(x);\n                            }\n                    });\n                    this.books = data;\n                    // setting if data in params\n                    console.log(this.params_book_id , this.params_chap_id)\n                    if (this.params_book_id && this.params_chap_id) {\n                        //Geting the chapters\n                        let item = this.books.find(x => x.book_id === this.params_book_id);\n                        console.log(item)\n                        if (item) {\n                        let data = item.chapters.split(',');\n                        let finalData: any = [];\n                        data.forEach(function (e) {\n                            if(e != '') {\n                                let chapter = {\n                                    id: e,\n                                    selected: false\n                                };\n                                finalData.push(chapter);\n\n                            }\n                        });\n                        this.chapters = finalData;\n                        console.log(this.chapters)\n                        this.chapters.map(function (x) {\n                            if (x.id !== self.params_chap_id) {\n                                x.selected = false;\n                            } else {\n                                x.selected = true;\n                            }\n                            return x;\n                        });\n\n\n                        //Expanding Toggle\n                        this.books.map(function (x) {\n                            if (x.book_id !== self.params_book_id) {\n                                x.expanded = false;\n                            } else {\n                                x.expanded = true;\n                            }\n                            return x;\n                        });\n                    }\n                }\n\n                    //get & Map Text Book DAM ID\n                    this.getCMPBooksText( dam_id );\n                } else if (!res) {\n                    this.toast.presentToastWithOptions(res.message, (this.alertMessage ? this.alertMessage.SomeThingWrong : 'Something Went Wrong'), 'danger');\n                }\n            });\n    }\n\n    // getting text\n\n    getCMPBooksText( cur_dam_id ) {\n        let dam_id = cur_dam_id;\n        // this.loader.presentLoading().then(() => {\n            this._bibleService.getCMPbibleBooksText(dam_id).subscribe(async (res: any) => {\n                if (res) {\n                    let newBooksData: any = [];\n                    this.books.forEach(function(x) {\n                        let bookText = res.find(z => z.book_id === x.book_id);\n                        if (bookText) {\n                            x.text_dam_id = bookText.dam_id;\n                        }\n                        newBooksData.push(x);\n                    });\n                    this.books = newBooksData;\n                } else if (!res) {\n                    this.toast.presentToastWithOptions(res.message, (this.alertMessage ? this.alertMessage.SomeThingWrong : 'Something Went Wrong'), 'danger');\n                }\n                // this.loader.stopLoading();\n            });\n        // });\n    }\n\n\n\n    // getBooksText( cur_dam_id ) {\n    //     let dam_id = cur_dam_id + '2ET';\n    //     // this.loader.presentLoading().then(() => {\n    //         this._bibleService.getbibleBooksText(dam_id).subscribe(async (res: any) => {\n    //             if (res) {\n    //                 let newBooksData: any = [];\n    //                 this.books.forEach(function(x) {\n    //                     let bookText = res.find(z => z.book_id === x.book_id);\n    //                     if (bookText) {\n    //                         x.text_dam_id = bookText.dam_id;\n    //                     }\n    //                     newBooksData.push(x);\n    //                 });\n    //                 this.books = newBooksData;\n    //             } else if (!res) {\n    //                 this.toast.presentToastWithOptions(res.message, (this.alertMessage ? this.alertMessage.SomeThingWrong : 'Something Went Wrong'), 'danger');\n    //             }\n    //             // this.loader.stopLoading();\n    //         });\n    //     // });\n    // }\n    ionViewWillEnter(){\n        // this.event_provider.hidefooter(false, 'new');\n        // if(this.audioService.isAudioPlay == \"Play\"){\n        //     this.audioService.togglePlayer(true)\n        //     }  \n        // this.common.biblePageEnable = false;\n        // this.event_provider.playingFlags(\"Pause\");\n        // this.common.oldSong = ''\n\n\n    }\n\n    ionViewDidLeave(){\n        // this.event_provider.hidefooter(true, 'new');\n    }\n}\n"],"sourceRoot":""}