{"version":3,"sources":["./src/app/modules/forms/dynamic-form/dynamic-form.component.html","./src/app/modules/forms/forms/forms.page.html","./src/app/modules/forms/common/question-control.service.ts","./src/app/modules/forms/dynamic-form/dynamic-form.component.scss","./src/app/modules/forms/dynamic-form/dynamic-form.component.ts","./src/app/modules/forms/forms/forms.module.ts","./src/app/modules/forms/forms/forms.page.scss","./src/app/modules/forms/forms/forms.page.ts"],"names":[],"mappings":"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","file":"modules-forms-forms-forms-module-es2015.js","sourcesContent":["module.exports = \"<div  class=\\\"form-row\\\" *ngIf=\\\"question.field_type !== 'poll-field' && question.field_type !== 'quiz-field' && question.field_type !== 'survey-field' && question.field_type !== 'name-field'\\\" >\\n  <div *ngFor=\\\"let list of listColumns; let i = index\\\">\\n    <input [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" *ngIf=\\\"question.type === 'checkbox' || question.quizFieldType === 'checkbox-quiz-type' || question.postTagsFieldType === 'checkbox-posttags-type'\\\" type=\\\"checkbox\\\" [id]=\\\"list\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value[i]\\\">\\n\\n    <input [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" *ngIf=\\\"question.type === 'radio' || question.quizFieldType === 'radiobtn-quiz-type'\\\" type=\\\"radio\\\" [id]=\\\"list\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value[i]\\\">\\n    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type == 'quiz-field' || (question.field_type === 'post_tag-field')\\\">{{list}}</label>\\n    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'poll-field' && i === 0\\\">{{question.pollQuestion}}</label><br *ngIf=\\\"question.field_type === 'poll-field'\\\">\\n    <input [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [maxlength]=\\\"question.maxLength\\\" *ngIf=\\\"(question.type === 'email' || question.type === 'number' || question.type === 'text' || (question.field_type === 'survey-field' && question.type === 'text')) && question.field_type != 'list-field'\\\" [name]=\\\"question.key\\\" [type]=\\\"question.type\\\"  class=\\\"form-control\\\" />\\n    <select [id]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [name]=\\\"question.key\\\" *ngIf=\\\"(question.pollType === 'dropdown-poll-type' || question.quizFieldType === 'dropdown-quiz-type' || question.surveyFieldType === 'survey-quiz-type' || question.postTagsFieldType === 'dropdown-posttags-type') && i === 0\\\" class=\\\"form-control\\\" >\\n      <option *ngFor=\\\"let value of question.option\\\" [value]=\\\"value\\\">{{value}}</option>\\n\\n    </select>\\n    <input [type]=\\\"list.type\\\" [value]=\\\"list.value\\\" [(ngModel)]=\\\"list.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" *ngIf=\\\"question.field_type === 'list-field'\\\" class=\\\"form-control\\\">\\n    <ion-button *ngIf=\\\"question.field_type === 'list-field'\\\" (click)=\\\"addListFields(question, i)\\\">+</ion-button>\\n    <ion-button *ngIf=\\\"question.field_type === 'list-field' && question.listColumns.length > 1\\\" (click)=\\\"removeListFields(question, i)\\\">-</ion-button>\\n    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\"><span *ngIf=\\\"list.customLabel !== ''\\\">{{list.customLabel}}</span></label>\\n    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\"><span *ngIf=\\\"list.customLabel === ''\\\">{{list.label}}</span></label>\\n    <input [(ngModel)]=\\\"question.value[i]\\\" [ngModelOptions]=\\\"{standalone: true}\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\" [name]=\\\"list.key\\\" [type]=\\\"list.inputType\\\" [placeholder]=\\\"list.placeholder\\\" class=\\\"form-control\\\" />\\n    <input type=\\\"file\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" accept=\\\"image/*\\\" *ngIf=\\\"(question.pollType === 'file-poll-type' || question.quizFieldType === 'file-quiz-type' || question.surveyFieldType === 'file-quiz-type') && i === 0\\\">\\n    <input type=\\\"time\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" *ngIf=\\\"question.type === 'time'\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" >\\n    <input type=\\\"date\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" *ngIf=\\\"question.type === 'date'\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\" >\\n    <!--  <br *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\">-->\\n  </div>\\n</div>\\n<ion-row  class=\\\"form-row\\\" *ngIf=\\\"question.field_type === 'name-field'\\\">\\n  <!--  <ion-row>-->\\n  <ion-col size=\\\"6\\\" *ngFor=\\\"let list of listColumns; let i = index\\\" [ngClass]=\\\"{'hide': list.isHidden != 'true'}\\\">\\n    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\"><span *ngIf=\\\"list.customLabel !== ''\\\">{{list.customLabel}}</span></label>\\n    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\"><span *ngIf=\\\"list.customLabel === ''\\\">{{list.label}}</span></label>\\n    <input  [(ngModel)]=\\\"list.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\" [name]=\\\"list.key\\\" [type]=\\\"list.inputType\\\" [placeholder]=\\\"list.placeholder\\\" class=\\\"form-control\\\" />\\n  </ion-col>\\n  <!--  <div class=\\\"col-lg-6\\\"  *ngFor=\\\"let list of listColumns; let i = index\\\">-->\\n  <!--    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\"><span *ngIf=\\\"list.customLabel !== ''\\\">{{list.customLabel}}</span></label>-->\\n  <!--    <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\"><span *ngIf=\\\"list.customLabel === ''\\\">{{list.label}}</span></label>-->\\n  <!--    <input style=\\\"width: 50% !important;\\\" [(ngModel)]=\\\"question.value[i]\\\" [ngModelOptions]=\\\"{standalone: true}\\\" *ngIf=\\\"question.field_type === 'name-field' && list.isHidden === 'true'\\\" [name]=\\\"list.key\\\" [type]=\\\"list.inputType\\\" [placeholder]=\\\"list.placeholder\\\" class=\\\"form-control\\\" />-->\\n  <!--  </div>-->\\n\\n  <!--  </ion-row>-->\\n</ion-row>\\n<div  class=\\\"form-row\\\" *ngIf=\\\"question.field_type === 'poll-field'\\\">\\n  <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'poll-field'\\\">{{question.pollQuestion}}</label><br>\\n  <div *ngIf=\\\"question.pollType === 'radiobtn-poll-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"radio\\\" id=\\\"pool-radio\\\" name=\\\"pool-radio\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label attr.for=\\\"pool-radio\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.pollType === 'checkbox-poll-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"checkbox\\\" [id]=\\\"box\\\" [name]=\\\"box\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value[i]\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label [attr.for]=\\\"box\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.pollType === 'dropdown-poll-type'\\\">\\n    <select [id]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [name]=\\\"question.key\\\" class=\\\"form-control\\\" >\\n      <option *ngFor=\\\"let box of listColumns\\\" [value]=\\\"box\\\">{{box}}</option>\\n\\n    </select>\\n  </div>\\n</div>\\n\\n<div  class=\\\"form-row\\\" *ngIf=\\\"question.field_type === 'quiz-field'\\\">\\n  <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'quiz-field'\\\">{{question.pollQuestion}}</label><br>\\n  <div *ngIf=\\\"question.quizFieldType === 'radiobtn-quiz-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"radio\\\" id=\\\"quiz-radio\\\" name=\\\"quiz-radio\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label attr.for=\\\"quiz-radio\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.quizFieldType === 'checkbox-quiz-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"checkbox\\\" [id]=\\\"box\\\" [name]=\\\"box\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value[i]\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label [attr.for]=\\\"box\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.quizFieldType === 'dropdown-quiz-type'\\\">\\n    <!-- <div *ngFor=\\\"let box of listColumns; let i = index\\\"> -->\\n    <select [id]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [name]=\\\"question.key\\\" class=\\\"form-control\\\" >\\n      <option *ngFor=\\\"let box of listColumns\\\" [value]=\\\"box\\\">{{box}}</option>\\n\\n    </select>\\n  </div>\\n</div>\\n<div  class=\\\"form-row\\\" *ngIf=\\\"question.field_type === 'survey-field'\\\">\\n  <!-- <label [attr.for]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'quiz-field'\\\">{{question.pollQuestion}}</label><br> -->\\n  <div *ngIf=\\\"question.surveyFieldType === 'likert-survey-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"radio\\\" id=\\\"likert-survey-type\\\" name=\\\"likert-survey-type\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label attr.for=\\\"likert-survey-type\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'rating-survey-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\" class=\\\"rating\\\">\\n      <label>\\n        <input type=\\\"radio\\\" id=\\\"rating-survey-type\\\" name=\\\"rating-survey-type\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" />\\n        <!-- <div *ngIf=\\\"let box of listColumns; let  = index\\\"> -->\\n        <span class=\\\"icon\\\">★</span>\\n        <!-- </div> -->\\n      </label>\\n      <!-- <input type=\\\"radio\\\" id=\\\"rating-survey-type\\\" name=\\\"rating-survey-type\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label attr.for=\\\"rating-survey-type\\\"> {{box}}</label><br> -->\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'radiobtns-survey-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"radio\\\" id=\\\"radiobtns-survey-type\\\" name=\\\"radiobtns-survey-type\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label attr.for=\\\"radiobtns-survey-type\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'rank-survey-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"radio\\\" id=\\\"rank-survey-type\\\" name=\\\"rank-survey-type\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label attr.for=\\\"rank-survey-type\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'singleline-survey-type'\\\">\\n    <input [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [maxlength]=\\\"question.maxLength ? question.maxLength : 250 \\\" [name]=\\\"question.key\\\" [type]=\\\"'text'\\\"  class=\\\"form-control\\\" />\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'paragraph-survey-type'\\\">\\n    <ion-textarea class=\\\"form-control\\\" inputmode=\\\"text\\\" [placeholder]=\\\"question.placeholder\\\" [maxlength]=\\\"question.maxLength ? question.maxLength : 500\\\"\\n                  [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-textarea>\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'checkbox-survey-type'\\\">\\n    <div *ngFor=\\\"let box of listColumns; let i = index\\\">\\n      <input type=\\\"checkbox\\\" [id]=\\\"box\\\" [name]=\\\"box\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value[i]\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n      &nbsp;<label [attr.for]=\\\"box\\\"> {{box}}</label><br>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"question.surveyFieldType === 'dropdown-survey-type'\\\">\\n    <!-- <div *ngFor=\\\"let box of listColumns; let i = index\\\"> -->\\n    <select [id]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [name]=\\\"question.key\\\" class=\\\"form-control\\\" >\\n      <option *ngFor=\\\"let box of listColumns\\\" [value]=\\\"box\\\">{{box}}</option>\\n\\n    </select>\\n  </div>\\n</div>\\n\"","module.exports = \"<ion-content>\\n  <div class=\\\"page-wrapper\\\">\\n    <div class=\\\"app-container\\\">\\n      <div *ngIf=\\\"form_title || form_description\\\">\\n        <h2 *ngIf=\\\"form_title\\\" style=\\\"margin-bottom: 15px;\\\">{{form_title}}</h2>\\n        <label *ngIf=\\\"form_description && form_description_placement === 'below'\\\" style=\\\"margin: 0;\\\" [innerHTML]=\\\"form_description\\\"></label><br>\\n      </div>\\n      <div *ngIf=\\\"questions && questions.length\\\">\\n        <form>\\n          <ion-grid>\\n            <ion-row class=\\\"ion-justify-content-left\\\">\\n              <ion-col size=\\\"12\\\" *ngFor=\\\"let question of questions\\\">\\n                <div *ngIf=\\\"question.field_type === 'section-field'\\\">\\n                  <h4 style=\\\"margin-bottom: 0;\\\">{{question.label}}</h4>\\n                  <label style=\\\"margin: 0;\\\">{{question.description}}</label><br>\\n                  <hr style=\\\"width: 100%\\\">\\n                </div>\\n                <div style=\\\"margin-top: 20px\\\" class=\\\"form-row\\\" *ngIf=\\\"question.field_type !== 'hidden-field' && question.field_type !== 'captcha-field' && question.field_type !== 'post_body-field' && question.field_type != 'section-field'\\\">\\n                  <label *ngIf=\\\"question.field_type !== 'html-field' && question.field_type !== 'payment-input' \\\" style=\\\"margin: 0 0;\\\" [ngClass]=\\\"{'required-field': question.isRequired == 'true'}\\\" [attr.for]=\\\"question.key\\\"><span [ngClass]=\\\"{'margin-require-field': question.isRequired == 'true'}\\\">{{(question.label ? question.label : question.type) ? (question.label ? question.label : question.type) : question.field_type}}</span></label>\\n                  <label *ngIf=\\\"question.field_type === 'payment-input'\\\" style=\\\"margin: 0 0;\\\" [ngClass]=\\\"{'required-field': question.isRequired == 'true'}\\\" [attr.for]=\\\"question.key\\\"><span [ngClass]=\\\"{'margin-require-field': question.isRequired == 'true'}\\\">{{(question.customLabel ? question.customLabel : question.type) ? (question.customLabel ? question.customLabel : question.type) : question.field_type}}</span></label>\\n\\n                  \\n                  <label *ngIf=\\\"question.description\\\" [attr.for]=\\\"question.key\\\" style=\\\"display: block; margin: 0 0 10px 0; font-size:medium;\\\" [innerHTML]=\\\"question.description ? question.description : ''\\\"></label>\\n                  <input [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [min]=\\\"question.rangeMin\\\" [max]=\\\"question.rangeMax\\\" [maxlength]=\\\"question.maxLength\\\"\\n                         *ngIf=\\\"(question.type === 'email' || question.type === 'number' || question.type === 'password' || question.type === 'text' || question.field_type != 'phone-field') && (question.field_type != 'html-field' && question.field_type !== 'name-field' && question.field_type != 'consent-field' && question.field_type != 'poll-field' &&  question.field_type != 'chained-field' &&  question.field_type != 'list-field' &&  question.field_type != 'section-field' &&  question.field_type != 'post_tag-field' &&  question.field_type != 'survey-field' &&  question.field_type != 'quiz-field' && question.field_type != 'checkbox-field' && question.field_type != 'radiobtn-field' && question.field_type != 'dropdown-field' && question.field_type != 'multiSelect-field' && question.field_type != 'time-field' && question.field_type != 'date-field' && question.field_type != 'address-field' && question.field_type != 'website-field' && question.field_type !== 'password-field' && question.field_type !== 'paragraph-field' && question.field_type !== 'fileupload-field' && question.field_type != 'radiobtn-field' && question.field_type != 'price-field' && question.field_type != 'readonly-field'  && question.field_type != 'payment-input')\\\"\\n                         (input)=\\\"addEmail($event, question)\\\" [name]=\\\"question.key\\\" [placeholder]=\\\"question.field_type === 'email-field' ? question.email ? question.email : 'Email' : question.inputMaskValue\\\" [type]=\\\"question.type\\\" class=\\\"form-control\\\" (input)=\\\"checkMax(question)\\\"/>\\n                  <input *ngIf=\\\"question.field_type === 'website-field'\\\" class=\\\"form-control\\\" type=\\\"url\\\" placeholder=\\\"https://example.com\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                  <input *ngIf=\\\"question.field_type === 'phone-field'\\\" class=\\\"form-control\\\" type=\\\"tel\\\" pattern=\\\"[0-9]{3}-[0-9]{2}-[0-9]{3}\\\" placeholder=\\\"(000)000-0000\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" min=\\\"1\\\" max=\\\"5\\\" maxlength=\\\"50\\\">\\n                  <ion-textarea *ngIf=\\\"question.field_type === 'paragraph-field'\\\" class=\\\"form-control\\\" inputmode=\\\"text\\\" [maxlength]='question.maxLength !== \\\"\\\" ? question.maxLength : \\\"1000\\\"' [placeholder]=\\\"question.placeholder\\\"\\n                                [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"></ion-textarea>\\n                  <select class=\\\"form-control\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'dropdown-field'\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    <option *ngFor=\\\"let value of question.option\\\" [value]=\\\"value\\\">{{value}}</option>\\n\\n                  </select>\\n                  <div *ngIf=\\\"question.isEmailConfirmed === 'on' && question.field_type === 'email-field'\\\" [(ngModel)]=\\\"cnfrm_email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    <br>\\n                    <label>{{question.confirmEmail ? question.confirmEmail : 'Confirm Email'}}</label>\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" [placeholder]=\\\"question.confirmEmail ? question.confirmEmail : 'Confirm Email'\\\" (input)=\\\"checkEmail($event, question)\\\" [(ngModel)]=\\\"question.confirm_email\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"isEmailConfirm === false\\\">Email and Confirm email does not match</div>\\n                  </div>\\n                  <select class=\\\"form-control\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" *ngIf=\\\"question.field_type === 'multiSelect-field'\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                          multiple>\\n\\n                    <option *ngFor=\\\"let value of question.option\\\" [value]=\\\"value\\\">{{value}}</option>\\n\\n                  </select>\\n                  <div *ngIf=\\\"question.field_type === 'html-field'\\\" [innerHTML]=\\\"question.content\\\">\\n                  </div>\\n                  <!-- <div *ngIf=\\\"question.field_type === 'payment-input' && question.displayOnly === 'true' \\\">\\n                    <input class=\\\"form-control\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"  readonly/>\\n                  </div> -->\\n                  <div *ngIf=\\\"question.field_type === 'password-field'\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" [placeholder]=\\\"question.passwordPlaceholder ? question.passwordPlaceholder : question.passwordSubLabel\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [value]=\\\"question.value\\\" (input)=\\\"checkPasswordStrength($event, question)\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"question.passwordMinStrength === 'strong' && strongPassword === false\\\">Password has at least one lowercase letter, one uppercase letter, one digit, one special character and is at least eight characters long</div>\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"question.passwordMinStrength === 'good' && goodPassword === false\\\">Password has at least one lowercase letter, one uppercase letter, one digit, one special character and is at least six characters long</div>\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"question.passwordMinStrength === 'bad' && badPassword === false\\\">Password has at least one lowercase letter or uppercase letter, one digit or special character and is at least six characters long</div>\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"question.passwordMinStrength === 'short' && shortPassword === false\\\">Password has one lowercase letter or uppercase letter or digit</div><br>\\n                    <!-- <div *ngIf=\\\"question.passwordMinStrength === 'weak' && weakPassword === false\\\">Password has at least one lowercase letter, one uppercase letter, one digit, one special character and is at least six characters long</div> -->\\n                    <input class=\\\"form-control\\\" type=\\\"password\\\" [placeholder]=\\\"question.cPasswordPlaceholder ? question.cPasswordPlaceholder : question.cPasswordSubLabel\\\" (input)=\\\"checkMatchPassword($event, question)\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"matchPassword === false\\\">Password and Confirm password does not match</div>\\n                  </div>\\n\\n                  <div *ngIf=\\\"question.field_type === 'checkbox-field'\\\">\\n                    <div *ngFor=\\\"let box of question.option; let i = index\\\">\\n                      <input type=\\\"checkbox\\\" [id]=\\\"box\\\" [name]=\\\"box\\\" [value]=\\\"question.value[i]\\\" [(ngModel)]=\\\"question.value[i]\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      <label [attr.for]=\\\"box\\\" style=\\\"margin-left: 10px\\\"> {{box}}</label><br>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'consent-field'\\\">\\n                    <input type=\\\"checkbox\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    <label style=\\\"margin-left: 10px\\\" [attr.for]=\\\"question.key\\\" [innerHTML]=\\\"parseHTML(question.checkboxLabel)\\\"></label><br>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'radiobtn-field'\\\">\\n                    <div *ngFor=\\\"let box of question.option; let i = index\\\">\\n                      <input type=\\\"radio\\\" [id]=\\\"box\\\" [name]=\\\"box\\\" [value]=\\\"box\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      &nbsp;<label [attr.for]=\\\"box\\\"> {{box}}</label><br>\\n                    </div>\\n                    <div *ngIf=\\\"question.enableOtherChoice === 'true'\\\">\\n                      <input type=\\\"radio\\\" id=\\\"other\\\" name=\\\"other\\\" [value]=\\\"'Other'\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                      &nbsp;<label attr.for=\\\"other\\\"> Other</label><br>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'fileupload-field'\\\" >\\n                    <input type=\\\"file\\\" id=\\\"fileinput\\\" [name]=\\\"question.key\\\"\\n                           [accept]=\\\"question.fileUpload\\\"\\n                           (change)=\\\"onFileChange($event, question, 0)\\\">\\n                    <ion-button *ngIf=\\\"question.value.length\\\" (click)=\\\"removeFile(question, 0)\\\">x</ion-button>\\n                    <div *ngFor=\\\"let file of question.value; let i = index\\\">\\n                      <input type=\\\"file\\\" id=\\\"fileinput\\\" [name]=\\\"question.key\\\"\\n                             [accept]=\\\"question.fileUpload\\\"\\n                             (change)=\\\"onFileChange($event, question, i+1)\\\" *ngIf=\\\"(number_of_files - 1) > i\\\">\\n\\n                      <ion-button *ngIf=\\\"question.value.length > i+1\\\" (click)=\\\"removeFile(question, i+1)\\\">x</ion-button>\\n                    </div>\\n\\n                  </div>\\n                  <input type=\\\"time\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                         *ngIf=\\\"question.field_type === 'time-field'\\\" class=\\\"form-control\\\">\\n                  <input [ngStyle]=\\\"question.datePikcerIcon === 'cstm-icon' ? ({'background-image': 'url(' + question.iconPath + ')'}) : (question.datePikcerIcon === 'cal-icon' ? {'background-image': 'url(' + date_picker_icon + ')'} : {'': ''})\\\" type=\\\"date\\\" [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                         *ngIf=\\\"question.field_type === 'date-field'\\\" class=\\\"form-control date-input\\\">\\n                  <div *ngIf=\\\"question.field_type === 'product-field'\\\">\\n                    <!-- <label [attr.for]=\\\"question.key\\\">{{question.label}}</label><br> -->\\n                    <input *ngIf=\\\"question.postTagsFieldType === 'single-product-type'\\\" [maxlength]=\\\"question.maxLength\\\" [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                           type=\\\"text\\\" class=\\\"form-control\\\" />\\n                    <select [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                            *ngIf=\\\"question.postTagsFieldType === 'multiple-product-type'\\\" class=\\\"form-control\\\">\\n                      <option *ngFor=\\\"let value of question.option\\\" [value]=\\\"value\\\">{{value}}</option>\\n\\n                    </select>\\n                    <div *ngIf=\\\"question.postTagsFieldType === 'checkbox-product-type'\\\">\\n                      <div *ngFor=\\\"let box of question.option; let i = index\\\">\\n                        <input type=\\\"checkbox\\\" [id]=\\\"box\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value[i]\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                        <label [attr.for]=\\\"box\\\"> {{box}}</label><br>\\n                      </div>\\n                    </div>\\n\\n                    <div *ngIf=\\\"question.postTagsFieldType === 'radiobtn-product-type'\\\">\\n                      <div *ngFor=\\\"let box of question.option; let i = index\\\">\\n                        <input type=\\\"radio\\\" [id]=\\\"box\\\" [name]=\\\"question.key\\\" [value]=\\\"question.value[i]\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                        <label [attr.for]=\\\"box\\\"> {{box}}</label><br>\\n                      </div>\\n                    </div>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'quantity-field'\\\">\\n                    <!-- <label [attr.for]=\\\"question.key\\\">{{question.label}}</label><br> -->\\n                    <input [name]=\\\"question.key\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'option-field'\\\">\\n                    <select [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      <option *ngFor=\\\"let value of question.optionOption; let i = index\\\"\\n                              [value]=\\\"question.optionValue[i]\\\">{{value +' ' + question.optionPrice[i]}} </option>\\n\\n                    </select>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'shipping-field'\\\">\\n                    <select [id]=\\\"question.key\\\" [name]=\\\"question.key\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      <option *ngFor=\\\"let value of question.shippingOption; let i = index\\\"\\n                              [value]=\\\"question.shippingValue[i]\\\">{{value +' ' + question.shippingProductPrice[i]}} </option>\\n\\n                    </select>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'total-field'\\\">\\n                    <input [name]=\\\"question.key\\\" [value]=\\\"question.value\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"question.value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"/>\\n                  </div>\\n                  <div size=\\\"12\\\" *ngIf=\\\"question.field_type === 'address-field'\\\">\\n                    <ion-row>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"12\\\" *ngIf=\\\"question.isStreetAddress === 'on'\\\">\\n                        <label for=\\\"StreetAddress\\\">{{question.streetAddressSub ? question.streetAddressSub : 'Street Address'}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"StreetAddress\\\" name=\\\"StreetAddress\\\" [(ngModel)]=\\\"question.value.isStreetAddress\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"12\\\" *ngIf=\\\"question.isAddressLine === 'on'\\\">\\n                        <label for=\\\"StreetAddress\\\">{{question.addressLine2Sub ? question.addressLine2Sub : 'Address Line'}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"isAddressLine\\\" name=\\\"isAddressLine\\\" [(ngModel)]=\\\"question.value.isAddressLine\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngIf=\\\"question.isCity === 'on'\\\">\\n                        <label for=\\\"StreetAddress\\\">{{question.AddressCitySub ? question.AddressCitySub : 'City'}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"isCity\\\" name=\\\"isCity\\\" [(ngModel)]=\\\"question.value.isCity\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngIf=\\\"question.isStateProvince === 'on'\\\">\\n                        <label for=\\\"StreetAddress\\\">{{question.addressStateProvSub ? question.addressStateProvSub : 'State / Province / Region'}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"isStateProvince\\\" name=\\\"isStateProvince\\\" [(ngModel)]=\\\"question.value.isStateProvince\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngIf=\\\"question.isZipCode === 'on'\\\">\\n                        <label for=\\\"StreetAddress\\\">{{question.addressZipCodeSub ? question.addressZipCodeSub : 'ZIP / Postal Code'}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"isZipCode\\\" name=\\\"isZipCode\\\" [(ngModel)]=\\\"question.value.isZipCode\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngIf=\\\"question.isCountry === 'on'\\\">\\n                        <label for=\\\"StreetAddress\\\">{{question.addressCountrySub ? question.addressCountrySub : 'Country'}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"isCountry\\\" name=\\\"isCountry\\\" [(ngModel)]=\\\"question.value.defaultCcountry\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                    </ion-row>\\n                  </div>\\n                  <div *ngIf=\\\"question.field_type === 'credit-field'\\\">\\n                    <ion-row>\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngFor=\\\"let question of questions\\\">\\n                        <label for=\\\"creditCardNumber\\\">{{question.creditCardNumber}}</label> <br>\\n                        <input type=\\\"number\\\" id=\\\"creditCardNumber\\\" name=\\\"creditCardNumber\\\" [(ngModel)]=\\\"question.cardNumber\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngFor=\\\"let question of questions\\\">\\n                        <label for=\\\"creditCardholderName\\\">{{question.creditCardholderName}}</label> <br>\\n                        <input type=\\\"text\\\" id=\\\"creditCardholderName\\\" name=\\\"creditCardholderName\\\" [maxlength]=\\\"question.maxLength\\\" [(ngModel)]=\\\"question.cardCardholderName\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngFor=\\\"let question of questions\\\">\\n                        <label for=\\\"creditExpirationDate\\\">{{question.creditExpirationDate}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"creditExpirationDate\\\" name=\\\"creditExpirationDate\\\" [(ngModel)]=\\\"question.cardExpirationDate\\\" [ngModelOptions]=\\\"{standalone: true}\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n\\n                      <ion-col size=\\\"12\\\" [sizeLg]=\\\"6\\\" *ngFor=\\\"let question of questions\\\">\\n                        <label for=\\\"city\\\">{{question.creditSecurityCode}}</label><br>\\n                        <input type=\\\"text\\\" id=\\\"creditSecurityCode\\\" name=\\\"creditSecurityCode\\\" [(ngModel)]=\\\"question.cardSecurityCode\\\" class=\\\"form-control\\\">\\n                      </ion-col>\\n                    </ion-row>\\n                  </div>\\n                </div>\\n                <app-dynamic-form [question]=\\\"question\\\"\\n                                  [listColumns]=\\\"question.field_type === 'list-field' ?  question.listColumns :  question.field_type === 'poll-field' ? question.option :  question.field_type === 'quiz-field' ? question.quizText : question.field_type === 'post_tag-field' ? question.option : question.field_type === 'survey-field' ? question.surveyFieldType === 'likert-survey-type' ? question.likertOption : question.surveyFieldType === 'rating-survey-type' ? question.ratingOption : question.surveyFieldType === 'radiobtns-survey-type' ? question.radioOption : question.surveyFieldType === 'rank-survey-type' ? question.rankOption : question.surveyFieldType === 'checkbox-survey-type' ? question.checkboxOption : question.surveyFieldType === 'dropdown-survey-type' ? question.dropdownOption : '' :  question.field_type === 'name-field' ? question.inputs : ''\\\"\\n                                  *ngIf=\\\"question.field_type === 'html-field' || question.field_type === 'poll-field' ||  question.field_type === 'chained-field' ||  question.field_type === 'list-field' ||  question.field_type === 'section-field' ||  question.field_type === 'post_tag-field' ||  question.field_type === 'survey-field' ||  question.field_type === 'quiz-field' || question.field_type === 'name-field'\\\">\\n                </app-dynamic-form>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n          <div class=\\\"form-row\\\" *ngIf=\\\"paymentForEventRegistration === '0' || paymentForEventRegistration === '' \\\" >\\n            <ion-button class=\\\"commonBtn commonBtn--dark commonBtn--mdblock\\\" expand=\\\"block\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"checkPasswords || checkConfirmEmail\\\">\\n              Register\\n            </ion-button>\\n          </div>\\n          <div class=\\\"form-row\\\" *ngIf=\\\"paymentForEventRegistration !== '0' && paymentForEventRegistration !=='' \\\" >\\n            <ion-button class=\\\"commonBtn commonBtn--dark commonBtn--mdblock\\\" expand=\\\"block\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"checkPasswords || checkConfirmEmail\\\">\\n              Continue to Payment\\n            </ion-button>\\n          </div>\\n          <!-- <div class=\\\"form-row\\\">\\n            <ion-button class=\\\"commonBtn commonBtn--dark commonBtn--mdblock\\\" expand=\\\"block\\\" type=\\\"submit\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"checkPasswords || checkConfirmEmail\\\">\\n              {{'save' | translate}}\\n            </ion-button>\\n          </div> -->\\n        </form>\\n\\n        <div *ngIf=\\\"payLoad\\\" class=\\\"form-row\\\">\\n          <strong>Saved the following values</strong><br>{{payLoad}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</ion-content>\\n\"","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { QuestionBase } from './question-base';\n\n@Injectable()\nexport class QuestionControlService {\n  constructor() { }\n\n  toFormGroup(questions: QuestionBase<string>[] ) {\n    const group: any = {};\n\n    if(questions) {\n      questions.forEach(question => {\n        group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\n            : new FormControl(question.value || '');\n      });\n    }\n\n    return new FormGroup(group);\n  }\n}","module.exports = \".form-row label {\\n  display: inline-block;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.form-control, input[abbr=time] {\\n  display: block;\\n  width: 100%;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  color: #495057;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 0.25rem;\\n  -webkit-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n\\n.rating {\\n  display: inline-block;\\n  position: relative;\\n  height: 50px;\\n  line-height: 50px;\\n  font-size: 50px;\\n}\\n\\n.rating label {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  cursor: pointer;\\n}\\n\\n.rating label:last-child {\\n  position: static;\\n}\\n\\n.rating label:nth-child(1) {\\n  z-index: 5;\\n}\\n\\n.rating label:nth-child(2) {\\n  z-index: 4;\\n}\\n\\n.rating label:nth-child(3) {\\n  z-index: 3;\\n}\\n\\n.rating label:nth-child(4) {\\n  z-index: 2;\\n}\\n\\n.rating label:nth-child(5) {\\n  z-index: 1;\\n}\\n\\n.rating label input {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  opacity: 0;\\n}\\n\\n.rating label .icon {\\n  float: left;\\n  color: transparent;\\n}\\n\\n.rating label:last-child .icon {\\n  color: #000;\\n}\\n\\n.rating:not(:hover) label input:checked ~ .icon,\\n.rating:hover label:hover input ~ .icon {\\n  color: #09f;\\n}\\n\\n.rating label input:focus:not(:checked) ~ .icon:last-child {\\n  color: #000;\\n  text-shadow: 0 0 5px #09f;\\n}\\n\\n.hide {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub3VtYW5hbmp1bS9EZXNrdG9wL3JhZGlvYmFzZS9pb25pYy9wcm9kL1VudGl0bGVkL2lvbmljX21vYmlsZS9zcmMvYXBwL21vZHVsZXMvZm9ybXMvZHluYW1pYy1mb3JtL2R5bmFtaWMtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbW9kdWxlcy9mb3Jtcy9keW5hbWljLWZvcm0vZHluYW1pYy1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7RUFDQSxxQkFBQTtBQ0NKOztBRENBO0VBQ0ksY0FBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxzQkFBQTtFQUNBLDRCQUFBO0VBQ0EseUJBQUE7RUFDQSxzQkFBQTtFQUNBLGdGQUFBO0VBQUEsd0VBQUE7QUNFSjs7QURDQTtFQUNJLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FDRUo7O0FEQ0E7RUFDSSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7QUNFSjs7QURDQTtFQUNJLGdCQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0FDRUo7O0FEQ0E7RUFDSSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsVUFBQTtBQ0VKOztBRENBO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0FDRUo7O0FEQ0E7RUFDSSxXQUFBO0FDRUo7O0FEQ0E7O0VBRUksV0FBQTtBQ0VKOztBRENBO0VBQ0ksV0FBQTtFQUNBLHlCQUFBO0FDRUo7O0FEQ0E7RUFDSSxhQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Zvcm1zL2R5bmFtaWMtZm9ybS9keW5hbWljLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1yb3cgbGFiZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbn1cbi5mb3JtLWNvbnRyb2wsIGlucHV0W2FiYnI9XCJ0aW1lXCJdIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAuMzc1cmVtIC43NXJlbTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBjb2xvcjogIzQ5NTA1NztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NlZDRkYTtcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0O1xufVxuXG4ucmF0aW5nIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogNTBweDtcbiAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICBmb250LXNpemU6IDUwcHg7XG59XG5cbi5yYXRpbmcgbGFiZWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ucmF0aW5nIGxhYmVsOmxhc3QtY2hpbGQge1xuICAgIHBvc2l0aW9uOiBzdGF0aWM7XG59XG5cbi5yYXRpbmcgbGFiZWw6bnRoLWNoaWxkKDEpIHtcbiAgICB6LWluZGV4OiA1O1xufVxuXG4ucmF0aW5nIGxhYmVsOm50aC1jaGlsZCgyKSB7XG4gICAgei1pbmRleDogNDtcbn1cblxuLnJhdGluZyBsYWJlbDpudGgtY2hpbGQoMykge1xuICAgIHotaW5kZXg6IDM7XG59XG5cbi5yYXRpbmcgbGFiZWw6bnRoLWNoaWxkKDQpIHtcbiAgICB6LWluZGV4OiAyO1xufVxuXG4ucmF0aW5nIGxhYmVsOm50aC1jaGlsZCg1KSB7XG4gICAgei1pbmRleDogMTtcbn1cblxuLnJhdGluZyBsYWJlbCBpbnB1dCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG59XG5cbi5yYXRpbmcgbGFiZWwgLmljb24ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnJhdGluZyBsYWJlbDpsYXN0LWNoaWxkIC5pY29uIHtcbiAgICBjb2xvcjogIzAwMDtcbn1cblxuLnJhdGluZzpub3QoOmhvdmVyKSBsYWJlbCBpbnB1dDpjaGVja2VkIH4gLmljb24sXG4ucmF0aW5nOmhvdmVyIGxhYmVsOmhvdmVyIGlucHV0IH4gLmljb24ge1xuICAgIGNvbG9yOiAjMDlmO1xufVxuXG4ucmF0aW5nIGxhYmVsIGlucHV0OmZvY3VzOm5vdCg6Y2hlY2tlZCkgfiAuaWNvbjpsYXN0LWNoaWxkIHtcbiAgICBjb2xvcjogIzAwMDtcbiAgICB0ZXh0LXNoYWRvdzogMCAwIDVweCAjMDlmO1xufVxuXG4uaGlkZXtcbiAgICBkaXNwbGF5OiBub25lO1xufSIsIi5mb3JtLXJvdyBsYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xufVxuXG4uZm9ybS1jb250cm9sLCBpbnB1dFthYmJyPXRpbWVdIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjM3NXJlbSAwLjc1cmVtO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGNvbG9yOiAjNDk1MDU3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5yYXRpbmcge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiA1MHB4O1xuICBsaW5lLWhlaWdodDogNTBweDtcbiAgZm9udC1zaXplOiA1MHB4O1xufVxuXG4ucmF0aW5nIGxhYmVsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGhlaWdodDogMTAwJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ucmF0aW5nIGxhYmVsOmxhc3QtY2hpbGQge1xuICBwb3NpdGlvbjogc3RhdGljO1xufVxuXG4ucmF0aW5nIGxhYmVsOm50aC1jaGlsZCgxKSB7XG4gIHotaW5kZXg6IDU7XG59XG5cbi5yYXRpbmcgbGFiZWw6bnRoLWNoaWxkKDIpIHtcbiAgei1pbmRleDogNDtcbn1cblxuLnJhdGluZyBsYWJlbDpudGgtY2hpbGQoMykge1xuICB6LWluZGV4OiAzO1xufVxuXG4ucmF0aW5nIGxhYmVsOm50aC1jaGlsZCg0KSB7XG4gIHotaW5kZXg6IDI7XG59XG5cbi5yYXRpbmcgbGFiZWw6bnRoLWNoaWxkKDUpIHtcbiAgei1pbmRleDogMTtcbn1cblxuLnJhdGluZyBsYWJlbCBpbnB1dCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwO1xufVxuXG4ucmF0aW5nIGxhYmVsIC5pY29uIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnJhdGluZyBsYWJlbDpsYXN0LWNoaWxkIC5pY29uIHtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5yYXRpbmc6bm90KDpob3ZlcikgbGFiZWwgaW5wdXQ6Y2hlY2tlZCB+IC5pY29uLFxuLnJhdGluZzpob3ZlciBsYWJlbDpob3ZlciBpbnB1dCB+IC5pY29uIHtcbiAgY29sb3I6ICMwOWY7XG59XG5cbi5yYXRpbmcgbGFiZWwgaW5wdXQ6Zm9jdXM6bm90KDpjaGVja2VkKSB+IC5pY29uOmxhc3QtY2hpbGQge1xuICBjb2xvcjogIzAwMDtcbiAgdGV4dC1zaGFkb3c6IDAgMCA1cHggIzA5Zjtcbn1cblxuLmhpZGUge1xuICBkaXNwbGF5OiBub25lO1xufSJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionBase } from '../common/question-base';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  styleUrls: ['./dynamic-form.component.scss'],\n})\nexport class DynamicFormComponent implements OnInit {\n\n  @Input() question!: any;\n  @Input() form!: FormGroup;\n  @Input() listColumns!: any[];\n  // get isValid() { return this.form.controls[this.question.key].valid; }\n\n  constructor(){}\n\n  ngOnInit(){}\n\n  addListFields(question, index){\n    if(question.listColumns === ''){\n      question.listColumns = [{\n        type: 'text',\n        field: index,\n        value: ''\n      }];\n    } else {\n      question.listColumns.push({\n        type: 'text',\n        field: index,\n        value: ''\n      });\n    }\n  }\n\n  removeListFields(question, index){\n    question.listColumns.splice(1, index);\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FormsPage } from './forms.page';\nimport { DynamicFormComponent } from '../dynamic-form/dynamic-form.component';\nimport { QuestionControlService } from '../common/question-control.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TranslateModule,\n    RouterModule.forChild(routes),\n    \n  ],\n  declarations: [FormsPage, DynamicFormComponent],\n  providers:[QuestionControlService]\n})\nexport class FormsPageModule {}\n","module.exports = \".form-row label {\\n  display: inline-block;\\n  margin-bottom: 0.5rem;\\n}\\n\\n.form-control {\\n  display: block;\\n  width: 100%;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 1rem;\\n  line-height: 1.5;\\n  color: #495057;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 0.25rem;\\n  -webkit-transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n}\\n\\n.required-field::after {\\n  content: \\\"*\\\";\\n  color: red;\\n  float: left;\\n}\\n\\n.date-input {\\n  box-sizing: border-box;\\n  outline: 0;\\n  padding: 0.75rem;\\n  position: relative;\\n  width: 100%;\\n  background-position: 98% center;\\n  background-size: 24px;\\n  background-repeat: no-repeat;\\n  padding-right: 40px;\\n}\\n\\n.date-input::-webkit-calendar-picker-indicator {\\n  background: transparent;\\n  bottom: 0;\\n  color: transparent;\\n  cursor: pointer;\\n  height: auto;\\n  left: 0;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  width: auto;\\n}\\n\\n.custom-inpt {\\n  padding: 10px !important;\\n}\\n\\n.error-message {\\n  font-size: 12px;\\n  color: red;\\n}\\n\\n.commonBtn--dark {\\n  --color: #fff;\\n  --background: #302F34;\\n  --border-color: #302F34;\\n  --background-hover: #302F34;\\n  --color-activated: #ffffff;\\n  --background-activated: #302F34;\\n}\\n\\n.margin-require-field {\\n  margin-left: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ub3VtYW5hbmp1bS9EZXNrdG9wL3JhZGlvYmFzZS9pb25pYy9wcm9kL1VudGl0bGVkL2lvbmljX21vYmlsZS9zcmMvYXBwL21vZHVsZXMvZm9ybXMvZm9ybXMvZm9ybXMucGFnZS5zY3NzIiwic3JjL2FwcC9tb2R1bGVzL2Zvcm1zL2Zvcm1zL2Zvcm1zLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGNBQUE7RUFDQSxXQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0Esc0JBQUE7RUFDQSw0QkFBQTtFQUNBLHlCQUFBO0VBQ0Esc0JBQUE7RUFDQSxnRkFBQTtFQUFBLHdFQUFBO0FDQ0o7O0FERUE7RUFDSSxZQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7QUNDSjs7QURFQTtFQUNJLHNCQUFBO0VBQ0EsVUFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsK0JBQUE7RUFDQSxxQkFBQTtFQUNBLDRCQUFBO0VBQ0EsbUJBQUE7QUNDSjs7QURPQTtFQUNJLHVCQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxPQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsTUFBQTtFQUNBLFdBQUE7QUNKSjs7QURPQTtFQUNJLHdCQUFBO0FDSko7O0FET0E7RUFDSSxlQUFBO0VBQ0EsVUFBQTtBQ0pKOztBRE9BO0VBQ0ksYUFBQTtFQUNBLHFCQUFBO0VBQ0EsdUJBQUE7RUFDQSwyQkFBQTtFQUNBLDBCQUFBO0VBQ0EsK0JBQUE7QUNKSjs7QURPQTtFQUNJLGdCQUFBO0FDSkoiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Zvcm1zL2Zvcm1zL2Zvcm1zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLXJvdyBsYWJlbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IC41cmVtO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAuMzc1cmVtIC43NXJlbTtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBjb2xvcjogIzQ5NTA1NztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NlZDRkYTtcbiAgICBib3JkZXItcmFkaXVzOiAuMjVyZW07XG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDtcbn1cblxuLnJlcXVpcmVkLWZpZWxkOjphZnRlciB7XG4gICAgY29udGVudDogXCIqXCI7XG4gICAgY29sb3I6IHJlZDtcbiAgICBmbG9hdDogbGVmdDtcbn1cblxuLmRhdGUtaW5wdXQge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgb3V0bGluZTogMDtcbiAgICBwYWRkaW5nOiAwLjc1cmVtO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA5OCUgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjRweDtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XG59XG5cbi8vaW5wdXRbdHlwZT1cImRhdGVcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG4vL2lucHV0W3R5cGU9XCJkYXRlXCJdOjotd2Via2l0LWNhbGVuZGFyLXBpY2tlci1pbmRpY2F0b3Ige1xuLy8gICAgZGlzcGxheTogbm9uZTtcbi8vICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbi8vfVxuLmRhdGUtaW5wdXQ6Oi13ZWJraXQtY2FsZW5kYXItcGlja2VyLWluZGljYXRvciB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgYm90dG9tOiAwO1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGxlZnQ6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogYXV0bztcbn1cblxuLmN1c3RvbS1pbnB0IHsgLy8gc3R5bGUgY2xhc3MgdG8gYWRqdXN0IHRoZSBEYXRlIElucHV0IGNvbnRyb2wgZGVmYXVsdCBwYWRkaW5nIHZhbHVlXG4gICAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGNvbG9yOiByZWQ7XG59XG5cbi5jb21tb25CdG4tLWRhcmsge1xuICAgIC0tY29sb3I6ICNmZmY7XG4gICAgLS1iYWNrZ3JvdW5kOiAgIzMwMkYzNDtcbiAgICAtLWJvcmRlci1jb2xvcjogIzMwMkYzNDtcbiAgICAtLWJhY2tncm91bmQtaG92ZXI6ICMzMDJGMzQ7XG4gICAgLS1jb2xvci1hY3RpdmF0ZWQ6ICNmZmZmZmY7XG4gICAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogIzMwMkYzNDtcbn1cblxuLm1hcmdpbi1yZXF1aXJlLWZpZWxke1xuICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG59XG5cbkBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspIHtcblxufSIsIi5mb3JtLXJvdyBsYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjM3NXJlbSAwLjc1cmVtO1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGNvbG9yOiAjNDk1MDU3O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICBib3JkZXI6IDFweCBzb2xpZCAjY2VkNGRhO1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5yZXF1aXJlZC1maWVsZDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIipcIjtcbiAgY29sb3I6IHJlZDtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5kYXRlLWlucHV0IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3V0bGluZTogMDtcbiAgcGFkZGluZzogMC43NXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogOTglIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiAyNHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xufVxuXG4uZGF0ZS1pbnB1dDo6LXdlYmtpdC1jYWxlbmRhci1waWNrZXItaW5kaWNhdG9yIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvdHRvbTogMDtcbiAgY29sb3I6IHRyYW5zcGFyZW50O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGhlaWdodDogYXV0bztcbiAgbGVmdDogMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmN1c3RvbS1pbnB0IHtcbiAgcGFkZGluZzogMTBweCAhaW1wb3J0YW50O1xufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmNvbW1vbkJ0bi0tZGFyayB7XG4gIC0tY29sb3I6ICNmZmY7XG4gIC0tYmFja2dyb3VuZDogIzMwMkYzNDtcbiAgLS1ib3JkZXItY29sb3I6ICMzMDJGMzQ7XG4gIC0tYmFja2dyb3VuZC1ob3ZlcjogIzMwMkYzNDtcbiAgLS1jb2xvci1hY3RpdmF0ZWQ6ICNmZmZmZmY7XG4gIC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6ICMzMDJGMzQ7XG59XG5cbi5tYXJnaW4tcmVxdWlyZS1maWVsZCB7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG59Il19 */\"","import { ArrayType } from '@angular/compiler';\nimport { error } from 'util';\nimport { Component, IterableDiffers, OnInit } from '@angular/core';\nimport {EventProviderService} from \"../../../../services/event-provider.service\";\nimport {WordPressService} from \"../../../../services/word-press.service\";\nimport {LoaderService} from \"../../../../services/loader.service\";\nimport {\n  Location\n} from '@angular/common';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { Observable } from 'rxjs';\nimport { QuestionBase } from 'src/app/modules/forms/common/question-base';\nimport { FormGroup } from '@angular/forms';\nimport { QuestionControlService } from '../common/question-control.service';\nimport { DropdownQuestion } from '../common/question-dropdown';\nimport { TextboxQuestion } from '../common/question-textbox';\nimport { ToastService } from \"../../../../services/toast.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport * as moment from 'moment';\nimport {CommonService} from \"../../../../services/common.service\";\nimport { TranslateService } from '@ngx-translate/core';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.page.html',\n  styleUrls: ['./forms.page.scss'],\n})\nexport class FormsPage implements OnInit {\n  slug: string;\n  ch_id: any;\n  questions: any[] = [];\n  form!: any;\n  payLoad = '';\n  form_id: any;\n  date_picker_icon = '../assets/img/calendar_icon_dark.png';\n  strongPassword: boolean;\n  goodPassword: boolean;\n  badPassword: boolean;\n  shortPassword: boolean;\n  matchPassword: boolean;\n  checkPasswords: boolean;\n  isEmailConfirm: boolean;\n  checkConfirmEmail: boolean;\n  file_size: number;\n  number_of_files: number;\n  cnfrm_email = '';\n  number_of_quize_fields: any;\n  correct_quiz: any;\n  show_quiz_popup: boolean;\n  form_title: any;\n  form_description: any;\n  form_description_placement: any;\n  alertMessage:any;\n  paymentForEventRegistration: any = '';\n  event_id: any;\n  constructor(\n      private event_provider: EventProviderService,\n      private wordPressSerice: WordPressService,\n      private loader: LoaderService,\n      private location: Location,\n      private route: ActivatedRoute,\n      private qcs: QuestionControlService,\n      private toast: ToastService,\n      private dom: DomSanitizer,\n      private common: CommonService,\n      public translate:TranslateService,\n      private router: Router\n  ) {\n    let interval = setInterval(() => {\n      this.translate.get('ALERTS').subscribe( (res: any) => {\n          this.alertMessage = res;\n          console.log(\"alert\", this.alertMessage);\n          clearInterval(interval);\n      });\n  }, 2000)\n   }\n\n  ngOnInit() {\n    this.slug = this.route.snapshot.paramMap.get('slug');\n\n    this.event_provider.getChurchData.subscribe(async (res: any) => {\n      if (res && !(Object.keys(res).length === 0)) {\n        this.ch_id = res.church.ch_id;\n\n        let app_pages = res.apppages.find(x => x.name === 'Form');\n\n        if (app_pages) {\n          // asking for password\n          if (app_pages.password_protection_toggle === 'true'){\n            this.common.openPagePasswordModal(app_pages.page_protected_password, app_pages.selected_private_group);\n          }\n        }\n\n        this.getForm();\n      }\n    });\n  }\n  onFileChange(event, question, index){\n    if(this.number_of_files < (question.value.length - 1)){\n      this.toast.presentToastWithOptions(\"You can upload maximum \" + this.number_of_files + \" number of files\",'Warning Message', 'warning');\n      return false;\n    } else if(this.file_size < event.target.files[0].size/1024/1024){\n      this.toast.presentToastWithOptions(\"File size must under \" + this.file_size + \" MiB\",'Warning Message', 'warning');\n      event.target.files[0] = [];\n      return false;\n    } else {\n      this.uploadFiles(event.target.files, index, question);\n    }\n  }\n  removeFile(question, i){\n    question.value.splice(i, 1);\n  }\n\n  onCheckBoxChange(ev: any, question: any, index: any) {\n    question.value[index]\n  }\n\n  getForm() {\n    this.number_of_quize_fields = 0;\n    this.wordPressSerice.getQuestions({ch_id: this.ch_id, id: this.slug}).subscribe((res: any) => {\n\n      this.event_id = res.event_id;\n      this.form_id = JSON.parse(res.form).form_id;\n      this.form_title = JSON.parse(JSON.parse(res.form).display_meta).title;\n      this.form_description = JSON.parse(JSON.parse(res.form).display_meta).description;\n      if(this.form_description.includes(\"\\n\")){\n        this.form_description = this.form_description.replace(/\\n/gi, \"<br/>\");\n      }\n      this.form_description_placement = JSON.parse(JSON.parse(res.form).display_meta).descriptionPlacement;\n      this.questions = JSON.parse(JSON.parse(res.form).display_meta).fields;\n      if(this.questions) {\n        this.questions.forEach(question => {\n          if (question.field_type === 'password-field' && question.isRequired == 'true') {\n            this.checkPasswords = true;\n          }\n          if (question.field_type === 'email-field' && question.isEmailConfirmed === 'on' && question.isRequired == 'true') {\n            this.checkConfirmEmail = true;\n          }\n          if (question.field_type === 'html-field') {\n            if(question.content.search('<a') != -1 ){\n              do{\n\n                let link = this.checkLink(question.content);\n\n                if(link && link.length && link !== question.content){\n                  question.content = question.content.replace(link[0], '');\n                  question.content.replace('href='+link[0].replace('\"', ''), '')\n                  var new_bypassLink = link[0];\n\n\n                  question.content = question.content.replace(`<a`, `<span style=\"color: blue; text-decoration: underline;\" onclick=\"openInNewBrowser('${new_bypassLink}', this)\" id=\"link_tag\"`);\n                  question.content = question.content.replace('</a>', '</span>');\n                  question.content = question.content.replace('rel=\"noopener noreferrer\"', 'rel=\"opener external author\"');\n                } else {\n                  question.content = question.content.replace(`<a`, `<span id=\"link_tag\"`);\n                  question.content = question.content.replace('</a>', '</span>');\n                  question.content = question.content.replace('rel=\"noopener noreferrer\"', 'rel=\"opener external author\"');\n                }\n              }while(question.content.search('<a') != -1);\n            }\n            if(question.content.includes('unsafe:')){\n              question.content = question.replaceAll('unsafe:', '');\n            }\n            question.content = this.parseHTML(question.content);\n          }\n          if (question.field_type === 'fileupload-field') {\n            this.file_size = parseInt(question.maxFileSize);\n            this.number_of_files = parseInt(question.maxNumberFiles)\n            question.value = [];\n          }\n          if (question.field_type === 'list-field') {\n            this.addListFields(question, 0);\n          }\n          if (question.field_type === 'poll-field') {\n            if (question.randomChoose === \"on\") {\n              question.option = this.shuffleArray(question.option);\n            }\n            if (question.pollType === 'checkbox-poll-type') {\n              question.value = [];\n              question.option.forEach(element => {\n                question.value.push(false);\n              });\n            }\n          }\n          if (question.field_type === 'quiz-field') {\n            if (question.randomizeQuizOrder === \"on\") {\n              question.quizText = this.shuffleArray(question.quizText);\n            }\n            this.number_of_quize_fields = this.number_of_quize_fields + 1;\n            if (question.quizFieldType === 'checkbox-quiz-type') {\n              question.value = [];\n              question.quizText.forEach(element => {\n                question.value.push(false);\n              });\n            }\n          }\n          if (question.field_type === 'survey-field') {\n            if (question.surveyFieldType === 'checkbox-survey-type') {\n              question.value = [];\n              question.checkboxOption.forEach(element => {\n                question.value.push(false);\n              });\n            }\n          }\n          if (question.field_type === 'address-field') {\n            question.value = {};\n            if (question.isStreetAddress === 'on') {\n              question.value['isStreetAddress'] = '';\n            }\n            if(question.question !== undefined) {\n              if (question.question.isAddressLine !== undefined && question.question.isAddressLine === 'on') {\n                question.value['isAddressLine'] = '';\n              }\n              if (question.question.isCity === 'on') {\n                question.value['isCity'] = '';\n              }\n            }\n            if (question.isStateProvince === 'on') {\n              question.value['isStateProvince'] = '';\n            }\n            if (question.isZipCode === 'on') {\n              question.value['isZipCode'] = '';\n            }\n            if (question.isCountry === 'on') {\n              question.value['defaultCcountry'] = '';\n            }\n          }\n          if (question.field_type === 'checkbox-field') {\n            question.value = [];\n            question.option.forEach(element => {\n              question.value.push(false);\n            });\n          }\n          if (question.field_type === 'payment-input'){\n            this.paymentForEventRegistration = question.value[0];\n          }\n        });\n      }\n      this.form = this.qcs.toFormGroup(this.questions as QuestionBase<string>[]);\n    });\n  }\n\n  validURL(str) {\n    var pattern = new RegExp(\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n        '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return !!pattern.test(str);\n  }\n\n  async onSubmit() {\n    var data = [];\n    let exit = false;\n    let isValid = true;\n    this.correct_quiz = 0;\n    this.show_quiz_popup = false;\n    this.questions.forEach((question, index) => {\n      if(question.isRequired === 'true'){\n        if(question.field_type === 'name-field'){\n          question.inputs.forEach((input, index) => {\n            if(input.value === '' && input.isHidden === 'true') {\n              isValid = false;\n            }\n          });\n          if(isValid) {\n            question.value = JSON.stringify(question.inputs);\n          }\n        }\n        if(question.value instanceof Array){\n          isValid = false;\n          question.value.forEach(element => {\n            if(element !== '' && ((question.field_type === 'checkbox-field' || question.pollType === 'checkbox-poll-type' || question.quizFieldType === 'checkbox-quiz-type' || question.surveyFieldType === 'checkbox-survey-type' || question.field_type === 'checkbox-field' || question.field_type === 'multiSelect-field') && element !== false)){\n              isValid = true;\n            }\n          });\n\n        } else {\n          if(question.value === ''){\n            isValid = false;\n            return 0;\n          }\n        }\n      } else {\n        if(question.field_type === 'name-field'){\n          question.inputs.forEach((input, index) => {\n            if(input.value === '' && input.isHidden === 'true') {\n              isValid = false;\n            }\n          });\n          question.value = JSON.stringify(question.inputs);\n        }\n      }\n\n      if(question.field_type === 'checkbox-field'){\n        if(question.value.length >= 0){\n          question.value.forEach((input, index) => {\n            if(question.value[index] === true) {\n              question.value[index] = question.option[index];\n            } else {\n              question.value[index] = \"\";\n            }\n          });\n        }\n      }\n\n      if(question.field_type === 'list-field'){\n        question.value = question.listColumns;\n      }\n\n      if(question.field_type === 'email-field' && this.checkConfirmEmail === true){\n        if(question.value !== this.cnfrm_email){\n          this.toast.presentToastWithOptions(\"Email and Confirm email does not match\",'Warning Message', 'warning');\n          exit = true;\n          this.checkConfirmEmail = false;\n          this.isEmailConfirm = false;\n        }\n      }\n\n      if(question.field_type === 'poll-field'){\n        if(question.pollType === 'checkbox-poll-type'){\n          question.option.forEach((element, index) => {\n            if(question.value[index] === true){\n              question.value[index] = element;\n            }\n          });\n        }\n      }\n      if(question.field_type === 'poll-field'){\n        if(question.pollType === 'checkbox-poll-type'){\n          question.option.forEach((element, index) => {\n            if(question.value[index] == false){\n              question.value.splice(index, 1);\n            }\n          });\n        }\n      }\n      if(question.field_type === 'quiz-field'){\n        if(question.quizFieldType === 'checkbox-quiz-type'){\n          question.quizText.forEach((element, index) => {\n            if(question.value[index] === true){\n              question.value[index] = element;\n            }\n          });\n        }\n      }\n\n      if(question.field_type === 'checkbox-field'){\n        // if(question.surveyFieldType === 'checkbox-survey-type'){\n          question.option.forEach((element, index) => {\n            if(question.value[index] === true){\n              question.value[index] = element;\n            }\n          });\n        // }\n      }\n\n      if(question.field_type === 'quiz-field'){\n        if(question.quizFieldType === 'checkbox-quiz-type'){\n          question.quizText.forEach((element, index) => {\n            if(question.value[index] == false){\n              question.value.splice(index, 1);\n            }\n          });\n        }\n      }\n\n      if(question.field_type === 'survey-field'){\n        if(question.surveyFieldType === 'checkbox-survey-type'){\n          question.checkboxOption.forEach((element, index) => {\n            if(question.value[index] === true){\n              question.value[index] = element;\n            }\n          });\n        }\n      }\n      if(question.field_type === 'survey-field'){\n        if(question.surveyFieldType === 'checkbox-survey-type'){\n          question.checkboxOption.forEach((element, index) => {\n            if(question.value[index] == false){\n              question.value.splice(index, 1);\n            }\n          });\n        }\n      }\n\n      if(question.isPasswordStrength === 'true' && question.isRequired == 'true'){\n        if(question.passwordMinStrength === 'strong'){\n          if(question.value.match('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')){\n            this.strongPassword = true;\n          } else {\n            this.toast.presentToastWithOptions(\"Password has at least one lowercase letter, one uppercase letter, one digit, one special character and is at least eight characters long\",'Warning Message', 'warning');\n            exit = true;\n          }\n        }\n        if(question.passwordMinStrength === 'good'){\n          if(question.value.match('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))')){\n            this.goodPassword = true;\n          } else {\n            this.toast.presentToastWithOptions(\"Password has at least one lowercase letter, one uppercase letter, one digit, one special character and is at least six characters long\",'Warning Message', 'warning');\n            exit = true;\n          }\n        }\n        if(question.passwordMinStrength === 'bad'){\n          if(question.value.match('((?=.*[a-z])(?=.*[0-9])(?=.{6,}))')){\n            this.badPassword = true;\n          } else {\n            this.toast.presentToastWithOptions(\"Password has at least one lowercase letter or uppercase letter, one digit or special character and is at least six characters long\",'Warning Message', 'warning');\n            exit = true;\n          }\n        }\n        if(question.passwordMinStrength === 'short'){\n          if(question.value.match('((?=.*[a-z])(?=.*[0-9]))')){\n            this.shortPassword = true;\n          } else {\n            this.toast.presentToastWithOptions(\"Password has one lowercase letter or uppercase letter or digit\",'Warning Message', 'warning');\n            exit = true;\n          }\n        }\n      }\n\n      if(question.field_type === 'quiz-field'){\n        if(question.quizFieldType !== 'checkbox-quiz-type'){\n          if(question.value === question.radiobtnChoice){\n            this.correct_quiz = this.correct_quiz + 1;\n          }\n\n        }\n        this.show_quiz_popup = true;\n      }\n\n      if (question.field_type === 'website-field'){\n        if (question.value && !this.validURL(question.value)) {\n          this.toast.presentToastWithOptions(\"Website URL not valid. Format: https://example.com\",'Warning Message', 'warning');\n          exit = true;\n        }\n      }\n\n      if(question.rangeMax != '' && question.value.length < parseInt(question.minRange)){\n        this.toast.presentToastWithOptions(\"Please enter \" +question.minRange + \" in \" + question.label,'Warning Message', 'warning');\n        exit = true;\n\n      }\n      if(question.field_type === 'date-field' && isValid === true){\n        question.value = moment(question.value);\n        question.value = moment(question.value).format('MM/DD/YYYY')\n      }\n      if(isValid){\n        if(question.field_type === 'address-field'){\n          question.value = JSON.stringify(question.value);\n        }\n        data.push({\n          name: question.id ,\n          value: question.value\n        });\n      }\n    });\n    if(!isValid){\n      this.toast.presentToastWithOptions(this.alertMessage.enter_all_required_fields, this.alertMessage.warning, 'warning');\n      return;\n    }\n    if (exit){\n      return;\n    }\n    if(this.show_quiz_popup){\n      if(this.correct_quiz < this.number_of_quize_fields){\n        // this.toast.presentToastWithOptions(\"Your score in quiz is \" + this.correct_quiz + \"/\" + this.number_of_quize_fields,'Warning Message', 'warning');\n      } else {\n        // this.toast.presentToastWithOptions(\"Your score in quiz is \" + this.correct_quiz + \"/\" + this.number_of_quize_fields,'Message', 'success');\n      }\n    }\n    let body = {\n      ch_id: this.ch_id,\n      id: this.form_id,\n      data: JSON.stringify(data)\n    };\n    this.wordPressSerice.saveForm(body).subscribe((res: any) => {\n      if(res.confirmation_type === 'redirect'){\n        window.location = res.confirmation_content;\n      } else if(this.event_id != null){\n        if(this.paymentForEventRegistration !== 0 &&  this.paymentForEventRegistration !== ''){\n          this.router.navigate(['event-giving-pwa/'+this.ch_id + '/' + this.event_id, {payment: this.paymentForEventRegistration }]);\n         // 'event-giving-pwa/:ch_id/:event_id'\n        }else{\n\n          this.router.navigate(['event-giving/'+this.event_id]);\n        }\n      }\n       else {\n        this.toast.presentToastWithOptions((res.confirmation_content), 'Success', 'success');\n      }\n    })\n  }\n\n  parseHTML(data){\n    return this.dom.bypassSecurityTrustHtml(data);\n  }\n  checkMax(question){\n    if(question.value.length > parseInt(question.rangeMax)){\n      this.toast.presentToastWithOptions(\"Please enter \" +question.rangeMax + \" in \" + question.label,'Warning Message', 'warning');\n      return false;\n    }\n  }\n\n  checkPasswordStrength(e, question){\n    if(question.passwordMinStrength === 'strong'){\n\n      if(e.target.value.match('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{8,})')){\n        this.strongPassword = true;\n      } else {\n        this.strongPassword = false;\n      }\n    }\n    if(question.passwordMinStrength === 'good'){\n      if(e.target.value.match('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))')){\n        this.goodPassword = true;\n      } else {\n        this.goodPassword = false;\n      }\n    }\n    if(question.passwordMinStrength === 'bad'){\n      if(e.target.value.match('((?=.*[a-z])(?=.*[0-9])(?=.{6,}))')){\n        this.badPassword = true;\n      } else {\n        this.badPassword = false;\n      }\n    }\n    if(question.passwordMinStrength === 'short'){\n      if(e.target.value.match('((?=.*[a-z])(?=.*[0-9]))')){\n        this.shortPassword = true;\n      } else {\n        this.shortPassword = false;\n      }\n    }\n    this.matchPassword = false;\n    this.checkPasswords = true;\n  }\n\n  checkMatchPassword(e, question){\n    if(e.target.value != question.value){\n      this.matchPassword = false;\n      this.checkPasswords = true;\n    } else {\n      this.matchPassword = true;\n      this.checkPasswords = false;\n    }\n  }\n  addListFields(question, index){\n    if(question.listColumns === ''){\n      question.listColumns = [{\n        type: 'text',\n        field: index,\n        value: ''\n      }];\n    } else {\n      question.listColumns.push({\n        type: 'text',\n        field: index,\n        value: ''\n      });\n    }\n  }\n\n  addEmail(e, question){\n    if(question.field_type === 'email-field'){\n      // this.checkConfirmEmail = true;\n      // this.isEmailConfirm = false;\n    }\n  }\n\n  checkEmail(e, question){\n    if(question.confirm_email === question.value){\n      this.isEmailConfirm = true;\n      this.checkConfirmEmail = false;\n    } else {\n      this.isEmailConfirm = false;\n    }\n  }\n\n  shuffleArray(array) {\n    var m = array.length, t, i;\n\n    // While there remain elements to shuffle\n    while (m) {\n      // Pick a remaining element…\n      i = Math.floor(Math.random() * m--);\n\n      // And swap it with the current element.\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t;\n    }\n\n    return array;\n  }\n\n  async uploadFiles(files, index, question){\n\n    const formData = new FormData();\n    const toBase64 = file => new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = error => reject(error);\n    });\n    let base64 = await toBase64(files[0]);\n    let data = {\n      file: base64\n    };\n\n    this.wordPressSerice.saveFiles(data).subscribe( (res: any) => {\n      if(res.status){\n        question.value[index] = res.file_name[0];\n      }\n    });\n\n  }\n\n  checkLink(code: any) {\n    let link = code.match(/\\bhttps?:\\/\\/\\S+\\b/gi);\n    if(link && link.length){\n      code.replace('href='+link[0], '');\n      if(link[0].includes('css')){\n        return this.checkLink(code);\n      }\n      return link;\n    } else {\n      return code;\n    }\n\n  }\n\n}"],"sourceRoot":""}